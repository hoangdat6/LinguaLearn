[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiParameter",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiExample",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema_field",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "password_validation",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "UserDetail",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "UserDetail",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "UserDetail",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "apps.accounts.models",
        "description": "apps.accounts.models",
        "isExtraImport": true,
        "detail": "apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "default_token_generator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "cache",
        "importPath": "django.core.cache",
        "description": "django.core.cache",
        "isExtraImport": true,
        "detail": "django.core.cache",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "permission_classes",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "auth_schema",
        "importPath": "apps.accounts.schemas",
        "description": "apps.accounts.schemas",
        "isExtraImport": true,
        "detail": "apps.accounts.schemas",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "StreakService",
        "importPath": "apps.accounts.services",
        "description": "apps.accounts.services",
        "isExtraImport": true,
        "detail": "apps.accounts.services",
        "documentation": {}
    },
    {
        "label": "StreakService",
        "importPath": "apps.accounts.services",
        "description": "apps.accounts.services",
        "isExtraImport": true,
        "detail": "apps.accounts.services",
        "documentation": {}
    },
    {
        "label": "id_token",
        "importPath": "google.oauth2",
        "description": "google.oauth2",
        "isExtraImport": true,
        "detail": "google.oauth2",
        "documentation": {}
    },
    {
        "label": "requests",
        "importPath": "google.auth.transport",
        "description": "google.auth.transport",
        "isExtraImport": true,
        "detail": "google.auth.transport",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "cloudinary.uploader",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary.uploader",
        "description": "cloudinary.uploader",
        "detail": "cloudinary.uploader",
        "documentation": {}
    },
    {
        "label": "UserDetailSerializer",
        "importPath": "apps.accounts.serializers",
        "description": "apps.accounts.serializers",
        "isExtraImport": true,
        "detail": "apps.accounts.serializers",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "AuthViewSet",
        "importPath": "apps.accounts.views",
        "description": "apps.accounts.views",
        "isExtraImport": true,
        "detail": "apps.accounts.views",
        "documentation": {}
    },
    {
        "label": "UserDetailViewSet",
        "importPath": "apps.accounts.views",
        "description": "apps.accounts.views",
        "isExtraImport": true,
        "detail": "apps.accounts.views",
        "documentation": {}
    },
    {
        "label": "FacebookAuthView",
        "importPath": "apps.accounts.views",
        "description": "apps.accounts.views",
        "isExtraImport": true,
        "detail": "apps.accounts.views",
        "documentation": {}
    },
    {
        "label": "GoogleAuthView",
        "importPath": "apps.accounts.views",
        "description": "apps.accounts.views",
        "isExtraImport": true,
        "detail": "apps.accounts.views",
        "documentation": {}
    },
    {
        "label": "ResetStreakAPIView",
        "importPath": "apps.accounts.views",
        "description": "apps.accounts.views",
        "isExtraImport": true,
        "detail": "apps.accounts.views",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "BooleanField",
        "importPath": "rest_framework.fields",
        "description": "rest_framework.fields",
        "isExtraImport": true,
        "detail": "rest_framework.fields",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "LeaderBoardViewSet",
        "importPath": "apps.gamification.views.leader_board_views",
        "description": "apps.gamification.views.leader_board_views",
        "isExtraImport": true,
        "detail": "apps.gamification.views.leader_board_views",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "importPath": "apps.learning.views.course_view",
        "description": "apps.learning.views.course_view",
        "isExtraImport": true,
        "detail": "apps.learning.views.course_view",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "importPath": "apps.learning.views.course_view",
        "description": "apps.learning.views.course_view",
        "isExtraImport": true,
        "detail": "apps.learning.views.course_view",
        "documentation": {}
    },
    {
        "label": "cloudinary.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "CloudinaryField",
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "isExtraImport": true,
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "CloudinaryField",
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "isExtraImport": true,
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "CloudinaryField",
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "isExtraImport": true,
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.learning.models.course",
        "description": "apps.learning.models.course",
        "isExtraImport": true,
        "detail": "apps.learning.models.course",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.learning.models.course",
        "description": "apps.learning.models.course",
        "isExtraImport": true,
        "detail": "apps.learning.models.course",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.learning.models.course",
        "description": "apps.learning.models.course",
        "isExtraImport": true,
        "detail": "apps.learning.models.course",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.learning.models.course",
        "description": "apps.learning.models.course",
        "isExtraImport": true,
        "detail": "apps.learning.models.course",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.learning.models.course",
        "description": "apps.learning.models.course",
        "isExtraImport": true,
        "detail": "apps.learning.models.course",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models.lesson",
        "description": "apps.learning.models.lesson",
        "isExtraImport": true,
        "detail": "apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models.lesson",
        "description": "apps.learning.models.lesson",
        "isExtraImport": true,
        "detail": "apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models.lesson",
        "description": "apps.learning.models.lesson",
        "isExtraImport": true,
        "detail": "apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models.lesson",
        "description": "apps.learning.models.lesson",
        "isExtraImport": true,
        "detail": "apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models.lesson",
        "description": "apps.learning.models.lesson",
        "isExtraImport": true,
        "detail": "apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models.lesson",
        "description": "apps.learning.models.lesson",
        "isExtraImport": true,
        "detail": "apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "importPath": "apps.learning.serializers.course_serializer",
        "description": "apps.learning.serializers.course_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.course_serializer",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "importPath": "apps.learning.serializers.course_serializer",
        "description": "apps.learning.serializers.course_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.course_serializer",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "importPath": "apps.learning.serializers.lesson_serializer",
        "description": "apps.learning.serializers.lesson_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "importPath": "apps.learning.serializers.lesson_serializer",
        "description": "apps.learning.serializers.lesson_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "OnlyLessonSerializer",
        "importPath": "apps.learning.serializers.lesson_serializer",
        "description": "apps.learning.serializers.lesson_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "importPath": "apps.learning.serializers.lesson_serializer",
        "description": "apps.learning.serializers.lesson_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "importPath": "apps.learning.serializers.lesson_serializer",
        "description": "apps.learning.serializers.lesson_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "importPath": "apps.learning.serializers.word_serializer",
        "description": "apps.learning.serializers.word_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.word_serializer",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "importPath": "apps.learning.serializers.word_serializer",
        "description": "apps.learning.serializers.word_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.word_serializer",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "importPath": "apps.learning.serializers.word_serializer",
        "description": "apps.learning.serializers.word_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.word_serializer",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "importPath": "apps.learning.serializers.word_serializer",
        "description": "apps.learning.serializers.word_serializer",
        "isExtraImport": true,
        "detail": "apps.learning.serializers.word_serializer",
        "documentation": {}
    },
    {
        "label": "Word",
        "importPath": "apps.learning.models.word",
        "description": "apps.learning.models.word",
        "isExtraImport": true,
        "detail": "apps.learning.models.word",
        "documentation": {}
    },
    {
        "label": "Word",
        "importPath": "apps.learning.models.word",
        "description": "apps.learning.models.word",
        "isExtraImport": true,
        "detail": "apps.learning.models.word",
        "documentation": {}
    },
    {
        "label": "Word",
        "importPath": "apps.learning.models.word",
        "description": "apps.learning.models.word",
        "isExtraImport": true,
        "detail": "apps.learning.models.word",
        "documentation": {}
    },
    {
        "label": "Word",
        "importPath": "apps.learning.models.word",
        "description": "apps.learning.models.word",
        "isExtraImport": true,
        "detail": "apps.learning.models.word",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Case",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "When",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Min",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "OuterRef",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Subquery",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "LessonViewSet",
        "importPath": "apps.learning.views.lesson_view",
        "description": "apps.learning.views.lesson_view",
        "isExtraImport": true,
        "detail": "apps.learning.views.lesson_view",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "importPath": "apps.learning.serializers",
        "description": "apps.learning.serializers",
        "isExtraImport": true,
        "detail": "apps.learning.serializers",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "importPath": "apps.learning.serializers",
        "description": "apps.learning.serializers",
        "isExtraImport": true,
        "detail": "apps.learning.serializers",
        "documentation": {}
    },
    {
        "label": "LessonProgress",
        "importPath": "apps.progress.models.lesson_progress",
        "description": "apps.progress.models.lesson_progress",
        "isExtraImport": true,
        "detail": "apps.progress.models.lesson_progress",
        "documentation": {}
    },
    {
        "label": "LessonProgress",
        "importPath": "apps.progress.models.lesson_progress",
        "description": "apps.progress.models.lesson_progress",
        "isExtraImport": true,
        "detail": "apps.progress.models.lesson_progress",
        "documentation": {}
    },
    {
        "label": "VocabularyProgressInputSerializer",
        "importPath": "apps.progress.serializers.vocabulary_progress",
        "description": "apps.progress.serializers.vocabulary_progress",
        "isExtraImport": true,
        "detail": "apps.progress.serializers.vocabulary_progress",
        "documentation": {}
    },
    {
        "label": "VocabularyProgress",
        "importPath": "apps.progress.models.vocabulary_progress",
        "description": "apps.progress.models.vocabulary_progress",
        "isExtraImport": true,
        "detail": "apps.progress.models.vocabulary_progress",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "LeaderBoard",
        "importPath": "apps.gamification.models",
        "description": "apps.gamification.models",
        "isExtraImport": true,
        "detail": "apps.gamification.models",
        "documentation": {}
    },
    {
        "label": "calculate_next_review",
        "importPath": "apps.progress.services.calculate_next_review",
        "description": "apps.progress.services.calculate_next_review",
        "isExtraImport": true,
        "detail": "apps.progress.services.calculate_next_review",
        "documentation": {}
    },
    {
        "label": "calculate_time_until_next_review",
        "importPath": "apps.progress.services.calculate_next_review",
        "description": "apps.progress.services.calculate_next_review",
        "isExtraImport": true,
        "detail": "apps.progress.services.calculate_next_review",
        "documentation": {}
    },
    {
        "label": "google.generativeai",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "google.generativeai",
        "description": "google.generativeai",
        "detail": "google.generativeai",
        "documentation": {}
    },
    {
        "label": "list_models",
        "importPath": "google.generativeai",
        "description": "google.generativeai",
        "isExtraImport": true,
        "detail": "google.generativeai",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Word",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Word",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "ThreadPoolExecutor",
        "importPath": "concurrent.futures",
        "description": "concurrent.futures",
        "isExtraImport": true,
        "detail": "concurrent.futures",
        "documentation": {}
    },
    {
        "label": "ThreadPoolExecutor",
        "importPath": "concurrent.futures",
        "description": "concurrent.futures",
        "isExtraImport": true,
        "detail": "concurrent.futures",
        "documentation": {}
    },
    {
        "label": "ThreadPoolExecutor",
        "importPath": "concurrent.futures",
        "description": "concurrent.futures",
        "isExtraImport": true,
        "detail": "concurrent.futures",
        "documentation": {}
    },
    {
        "label": "as_completed",
        "importPath": "concurrent.futures",
        "description": "concurrent.futures",
        "isExtraImport": true,
        "detail": "concurrent.futures",
        "documentation": {}
    },
    {
        "label": "VocabularyProgress",
        "importPath": "apps.progress.models",
        "description": "apps.progress.models",
        "isExtraImport": true,
        "detail": "apps.progress.models",
        "documentation": {}
    },
    {
        "label": "CourseProgress",
        "importPath": "apps.progress.models",
        "description": "apps.progress.models",
        "isExtraImport": true,
        "detail": "apps.progress.models",
        "documentation": {}
    },
    {
        "label": "Coalesce",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Course",
        "importPath": "apps.learning.models",
        "description": "apps.learning.models",
        "isExtraImport": true,
        "detail": "apps.learning.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models",
        "description": "apps.learning.models",
        "isExtraImport": true,
        "detail": "apps.learning.models",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "importPath": "apps.learning.models",
        "description": "apps.learning.models",
        "isExtraImport": true,
        "detail": "apps.learning.models",
        "documentation": {}
    },
    {
        "label": "CourseProgressViewSet",
        "importPath": "apps.progress.views.course_progress_view",
        "description": "apps.progress.views.course_progress_view",
        "isExtraImport": true,
        "detail": "apps.progress.views.course_progress_view",
        "documentation": {}
    },
    {
        "label": "LessonProgressViewSet",
        "importPath": "apps.progress.views.lesson_progress_view",
        "description": "apps.progress.views.lesson_progress_view",
        "isExtraImport": true,
        "detail": "apps.progress.views.lesson_progress_view",
        "documentation": {}
    },
    {
        "label": "VocabularyProgressViewSet",
        "importPath": "apps.progress.views.vocabulary_progress_view",
        "description": "apps.progress.views.vocabulary_progress_view",
        "isExtraImport": true,
        "detail": "apps.progress.views.vocabulary_progress_view",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "cloudinary",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary",
        "description": "cloudinary",
        "detail": "cloudinary",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularRedocView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "APIException",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "AuthenticationFailed",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "multiprocessing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "multiprocessing",
        "description": "multiprocessing",
        "detail": "multiprocessing",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.accounts.migrations.0001_initial",
        "description": "backend.apps.accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.apps.accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.accounts.migrations.0002_userdetail",
        "description": "backend.apps.accounts.migrations.0002_userdetail",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserDetail',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(blank=True, max_length=255, null=True)),",
        "detail": "backend.apps.accounts.migrations.0002_userdetail",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.accounts.migrations.0003_alter_userdetail_learning_time",
        "description": "backend.apps.accounts.migrations.0003_alter_userdetail_learning_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0002_userdetail'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userdetail',\n            name='learning_time',\n            field=models.DurationField(default=datetime.timedelta(0)),\n        ),",
        "detail": "backend.apps.accounts.migrations.0003_alter_userdetail_learning_time",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.accounts.migrations.0004_alter_customuser_options_and_more",
        "description": "backend.apps.accounts.migrations.0004_alter_customuser_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0003_alter_userdetail_learning_time'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='customuser',\n            options={'ordering': ['-date_joined'], 'verbose_name': 'Custom User', 'verbose_name_plural': 'Custom Users'},\n        ),\n        migrations.AddField(",
        "detail": "backend.apps.accounts.migrations.0004_alter_customuser_options_and_more",
        "documentation": {}
    },
    {
        "label": "register_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "register_schema = extend_schema(\n    request=UserRegisterSerializer,\n    responses={\n        status.HTTP_201_CREATED: OpenApiResponse(description=\"Đăng ký thành công. Yêu cầu xác minh email.\"),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Dữ liệu không hợp lệ.\")\n    },\n    description=\"Đăng ký tài khoản mới và gửi email xác minh.\"\n)\nlogin_schema = extend_schema(\n    request=UserLoginSerializer,",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "login_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "login_schema = extend_schema(\n    request=UserLoginSerializer,\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(description=\"Đăng nhập thành công.\"),\n        status.HTTP_401_UNAUTHORIZED: OpenApiResponse(description=\"Sai thông tin đăng nhập.\"),\n        status.HTTP_403_FORBIDDEN: OpenApiResponse(description=\"Tài khoản chưa xác minh.\")\n    },\n    description=\"Đăng nhập và nhận JWT token.\"\n)\nchange_password_schema = extend_schema(",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "change_password_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "change_password_schema = extend_schema(\n    request=ChangePasswordSerializer,\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(description=\"Đổi mật khẩu thành công.\"),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Dữ liệu không hợp lệ.\")\n    },\n    description=\"Đổi mật khẩu cho user đã đăng nhập.\"\n)\nreset_password_schema = extend_schema(\n    request=ResetPasswordSerializer,",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "reset_password_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "reset_password_schema = extend_schema(\n    request=ResetPasswordSerializer,\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(description=\"Gửi link đặt lại mật khẩu.\"),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Email không tồn tại.\")\n    },\n    description=\"Gửi email đặt lại mật khẩu.\"\n)\nlogout_schema = extend_schema(\n    request=LogoutSerializer,",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "logout_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "logout_schema = extend_schema(\n    request=LogoutSerializer,\n    responses={\n        status.HTTP_205_RESET_CONTENT: OpenApiResponse(description=\"Logout thành công.\"),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Token không hợp lệ.\")\n    },\n    description=\"Logout bằng cách blacklist refresh token.\"\n)\nverify_email_schema = extend_schema(\n    parameters=[",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "verify_email_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "verify_email_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"token\", description=\"Token xác thực email\", required=True, type=str)\n    ],\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(description=\"Xác thực email thành công.\"),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Token không hợp lệ hoặc tài khoản đã được kích hoạt.\")\n    },\n    description=\"Kích hoạt tài khoản khi người dùng nhấn vào link xác thực.\"\n)",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "reset_password_confirm_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "reset_password_confirm_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"uid\", description=\"User ID\", required=True, type=int),\n        OpenApiParameter(name=\"token\", description=\"Token đặt lại mật khẩu\", required=True, type=str)\n    ],\n    request={\n        \"application/json\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"new_password\": {\"type\": \"string\"},",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "reset_password_validate_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "reset_password_validate_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"uid\", description=\"User ID\", required=True, type=int),\n        OpenApiParameter(name=\"token\", description=\"Token đặt lại mật khẩu\", required=True, type=str)\n    ],\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(description=\"Token hợp lệ.\"),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Token không hợp lệ hoặc đã hết hạn.\")\n    },\n    description=\"Kiểm tra tính hợp lệ của token đặt lại mật khẩu.\"",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "refresh_token_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.auth_schema",
        "description": "backend.apps.accounts.schemas.auth_schema",
        "peekOfCode": "refresh_token_schema = extend_schema(\n    request={\n        \"application/json\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"refresh\": {\"type\": \"string\"}\n            },\n            \"required\": [\"refresh\"]\n        }\n    },",
        "detail": "backend.apps.accounts.schemas.auth_schema",
        "documentation": {}
    },
    {
        "label": "google_auth_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.social_auth_schema",
        "description": "backend.apps.accounts.schemas.social_auth_schema",
        "peekOfCode": "google_auth_schema = extend_schema(\n    request={\n        \"application/json\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id_token\": {\"type\": \"string\", \"description\": \"Google OAuth2 ID token\"}\n            },\n            \"required\": [\"id_token\"]\n        }\n    },",
        "detail": "backend.apps.accounts.schemas.social_auth_schema",
        "documentation": {}
    },
    {
        "label": "facebook_auth_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.social_auth_schema",
        "description": "backend.apps.accounts.schemas.social_auth_schema",
        "peekOfCode": "facebook_auth_schema = extend_schema(\n    request={\n        \"application/json\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\"type\": \"string\", \"description\": \"Facebook OAuth access token\"}\n            },\n            \"required\": [\"access_token\"]\n        }\n    },",
        "detail": "backend.apps.accounts.schemas.social_auth_schema",
        "documentation": {}
    },
    {
        "label": "user_detail_get_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.user_detail_schema",
        "description": "backend.apps.accounts.schemas.user_detail_schema",
        "peekOfCode": "user_detail_get_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: UserDetailSerializer,\n    },\n    description=\"Lấy thông tin chi tiết của người dùng hiện tại\"\n)\nuser_detail_update_schema = extend_schema(\n    request=UserDetailSerializer,\n    responses={\n        status.HTTP_200_OK: UserDetailSerializer,",
        "detail": "backend.apps.accounts.schemas.user_detail_schema",
        "documentation": {}
    },
    {
        "label": "user_detail_update_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.user_detail_schema",
        "description": "backend.apps.accounts.schemas.user_detail_schema",
        "peekOfCode": "user_detail_update_schema = extend_schema(\n    request=UserDetailSerializer,\n    responses={\n        status.HTTP_200_OK: UserDetailSerializer,\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Dữ liệu không hợp lệ\")\n    },\n    description=\"Cập nhật thông tin chi tiết của người dùng hiện tại\"\n)\nuser_profile_schema = extend_schema(\n    responses={",
        "detail": "backend.apps.accounts.schemas.user_detail_schema",
        "documentation": {}
    },
    {
        "label": "user_profile_schema",
        "kind": 5,
        "importPath": "backend.apps.accounts.schemas.user_detail_schema",
        "description": "backend.apps.accounts.schemas.user_detail_schema",
        "peekOfCode": "user_profile_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: UserProfileSerializer,\n    },\n    description=\"Lấy thông tin profile của người dùng hiện tại\"\n)",
        "detail": "backend.apps.accounts.schemas.user_detail_schema",
        "documentation": {}
    },
    {
        "label": "UserRegisterSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.auth_serializer",
        "description": "backend.apps.accounts.serializers.auth_serializer",
        "peekOfCode": "class UserRegisterSerializer(serializers.ModelSerializer):\n    confirm_password = serializers.CharField(write_only=True)\n    class Meta:\n        model = CustomUser\n        fields = [\"username\", \"email\", \"password\", \"confirm_password\"]\n    def validate(self, attrs):\n        if attrs[\"password\"] != attrs[\"confirm_password\"]:\n            raise serializers.ValidationError({\"password\": \"Mật khẩu không khớp!\"})\n        if CustomUser.objects.filter(username=attrs['username']).exists():\n            raise serializers.ValidationError({\"username\": \"Tên đăng nhập đã tồn tại!\"})",
        "detail": "backend.apps.accounts.serializers.auth_serializer",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.auth_serializer",
        "description": "backend.apps.accounts.serializers.auth_serializer",
        "peekOfCode": "class UserLoginSerializer(serializers.Serializer):\n    username = serializers.CharField()\n    password = serializers.CharField(write_only=True)\nclass ChangePasswordSerializer(serializers.Serializer):\n    old_password = serializers.CharField(required=True)\n    new_password = serializers.CharField(required=True)\n    confirm_new_password = serializers.CharField(required=True)\n    def validate_old_password(self, value):\n        user = self.context[\"request\"].user\n        if not user.check_password(value):",
        "detail": "backend.apps.accounts.serializers.auth_serializer",
        "documentation": {}
    },
    {
        "label": "ChangePasswordSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.auth_serializer",
        "description": "backend.apps.accounts.serializers.auth_serializer",
        "peekOfCode": "class ChangePasswordSerializer(serializers.Serializer):\n    old_password = serializers.CharField(required=True)\n    new_password = serializers.CharField(required=True)\n    confirm_new_password = serializers.CharField(required=True)\n    def validate_old_password(self, value):\n        user = self.context[\"request\"].user\n        if not user.check_password(value):\n            raise serializers.ValidationError(\"Mật khẩu cũ không đúng!\")\n        return value\n    def validate(self, attrs):",
        "detail": "backend.apps.accounts.serializers.auth_serializer",
        "documentation": {}
    },
    {
        "label": "ResetPasswordSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.auth_serializer",
        "description": "backend.apps.accounts.serializers.auth_serializer",
        "peekOfCode": "class ResetPasswordSerializer(serializers.Serializer):\n    email = serializers.EmailField(required=True)\nclass LogoutSerializer(serializers.Serializer):\n    refresh = serializers.CharField()",
        "detail": "backend.apps.accounts.serializers.auth_serializer",
        "documentation": {}
    },
    {
        "label": "LogoutSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.auth_serializer",
        "description": "backend.apps.accounts.serializers.auth_serializer",
        "peekOfCode": "class LogoutSerializer(serializers.Serializer):\n    refresh = serializers.CharField()",
        "detail": "backend.apps.accounts.serializers.auth_serializer",
        "documentation": {}
    },
    {
        "label": "UserDetailSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.user_detail_serializer",
        "description": "backend.apps.accounts.serializers.user_detail_serializer",
        "peekOfCode": "class UserDetailSerializer(serializers.ModelSerializer):\n    email = serializers.EmailField(source='user.email', read_only=True)\n    avatar = serializers.URLField(source='user.avatar', read_only=True)\n    joinedDate = serializers.DateTimeField(source='joined_date', read_only=True)\n    completedLessons = serializers.IntegerField(source='completed_lessons')\n    totalLessons = serializers.IntegerField(source='total_lessons')\n    completedTopics = serializers.IntegerField(source='completed_topics')\n    totalTopics = serializers.IntegerField(source='total_topics')\n    learningTime = serializers.DurationField(source='learning_time')\n    subscriptionExpiry = serializers.DateTimeField(source='subscription_expiry', allow_null=True)",
        "detail": "backend.apps.accounts.serializers.user_detail_serializer",
        "documentation": {}
    },
    {
        "label": "UserProfileSerializer",
        "kind": 6,
        "importPath": "backend.apps.accounts.serializers.user_detail_serializer",
        "description": "backend.apps.accounts.serializers.user_detail_serializer",
        "peekOfCode": "class UserProfileSerializer(serializers.ModelSerializer):\n    username = serializers.CharField(source='user.username')\n    email = serializers.EmailField(source='user.email', read_only=True)\n    avatar = serializers.URLField(source='user.avatar', read_only=True)\n    joinedDate = serializers.DateTimeField(source='joined_date', read_only=True)\n    streak = serializers.IntegerField(read_only=True)\n    class Meta:\n        model = UserDetail\n        fields = [\n            'name', 'email', 'avatar', 'birthday', 'joinedDate', 'streak', 'username'",
        "detail": "backend.apps.accounts.serializers.user_detail_serializer",
        "documentation": {}
    },
    {
        "label": "StreakService",
        "kind": 6,
        "importPath": "backend.apps.accounts.services.streak_service",
        "description": "backend.apps.accounts.services.streak_service",
        "peekOfCode": "class StreakService:\n    \"\"\"\n    Service for managing streaks.\n    \"\"\"\n    @staticmethod\n    def get_streak(user):\n        \"\"\"\n        Get the current streak for a user.\n        \"\"\"\n        return user.streak",
        "detail": "backend.apps.accounts.services.streak_service",
        "documentation": {}
    },
    {
        "label": "AuthViewSet",
        "kind": 6,
        "importPath": "backend.apps.accounts.views.auth_view",
        "description": "backend.apps.accounts.views.auth_view",
        "peekOfCode": "class AuthViewSet(viewsets.GenericViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserRegisterSerializer\n    @auth_schema.register_schema\n    @action(detail=False, methods=[\"post\"], url_path=\"register\")\n    def register(self, request):\n        serializer = UserRegisterSerializer(data=request.data)\n        try:\n            if serializer.is_valid():\n                user = serializer.save()",
        "detail": "backend.apps.accounts.views.auth_view",
        "documentation": {}
    },
    {
        "label": "ResetStreakAPIView",
        "kind": 6,
        "importPath": "backend.apps.accounts.views.reset_streak_view",
        "description": "backend.apps.accounts.views.reset_streak_view",
        "peekOfCode": "class ResetStreakAPIView(APIView):\n    permission_classes = [permissions.IsAuthenticated]\n    def post(self, request, *args, **kwargs):\n        streak = StreakService.reset_streak(user=request.user)\n        if streak is None:\n            return Response({\"error\": \"Failed to reset streak.\"}, status=400)\n        return Response({\"message\": \"Streak reset successfully.\"}, status=200)",
        "detail": "backend.apps.accounts.views.reset_streak_view",
        "documentation": {}
    },
    {
        "label": "GoogleAuthView",
        "kind": 6,
        "importPath": "backend.apps.accounts.views.social_auth_view",
        "description": "backend.apps.accounts.views.social_auth_view",
        "peekOfCode": "class GoogleAuthView(APIView):\n    @social_auth_schema.google_auth_schema\n    def post(self, request, *args, **kwargs):\n        # Handle Google login logic here\n        # Nhận id_token từ request\n        id_token_str = request.data.get('id_token')\n        if not id_token_str:\n            return Response({\"error\": \"id_token is required\"}, status=400)\n        try:\n            # Xác thực id_token với Google",
        "detail": "backend.apps.accounts.views.social_auth_view",
        "documentation": {}
    },
    {
        "label": "FacebookAuthView",
        "kind": 6,
        "importPath": "backend.apps.accounts.views.social_auth_view",
        "description": "backend.apps.accounts.views.social_auth_view",
        "peekOfCode": "class FacebookAuthView(APIView):\n    @social_auth_schema.facebook_auth_schema\n    def post(self, request):\n        access_token = request.data.get('access_token')\n        if not access_token:\n            return Response({\"error\": \"access_token is required\"}, status=400)\n        try:\n            # Verify token with Facebook\n            graph_url = f\"https://graph.facebook.com/me?fields=id,name,email,picture&access_token={access_token}\"\n            response = http_requests.get(graph_url)",
        "detail": "backend.apps.accounts.views.social_auth_view",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.apps.accounts.views.social_auth_view",
        "description": "backend.apps.accounts.views.social_auth_view",
        "peekOfCode": "User = get_user_model()\n# Create your views here.\nclass GoogleAuthView(APIView):\n    @social_auth_schema.google_auth_schema\n    def post(self, request, *args, **kwargs):\n        # Handle Google login logic here\n        # Nhận id_token từ request\n        id_token_str = request.data.get('id_token')\n        if not id_token_str:\n            return Response({\"error\": \"id_token is required\"}, status=400)",
        "detail": "backend.apps.accounts.views.social_auth_view",
        "documentation": {}
    },
    {
        "label": "UserDetailViewSet",
        "kind": 6,
        "importPath": "backend.apps.accounts.views.user_detail_view",
        "description": "backend.apps.accounts.views.user_detail_view",
        "peekOfCode": "class UserDetailViewSet(viewsets.GenericViewSet):\n    serializer_class = UserDetailSerializer\n    permission_classes = [permissions.IsAuthenticated]\n    # Không cần queryset chung vì ta không dùng retrieve theo pk\n    def get_queryset(self):\n        return UserDetail.objects.filter(user=self.request.user)\n    @action(detail=False, methods=['get'], url_path=\"me\")\n    @user_detail_schema.user_detail_get_schema\n    def get_me(self, request):\n        \"\"\"Get the current user's profile\"\"\"",
        "detail": "backend.apps.accounts.views.user_detail_view",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "backend.apps.accounts.apps",
        "description": "backend.apps.accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.accounts'",
        "detail": "backend.apps.accounts.apps",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "backend.apps.accounts.models",
        "description": "backend.apps.accounts.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    email_verified = models.BooleanField(default=False)\n    verification_token = models.UUIDField(default=uuid.uuid4, unique=True, null=True, blank=True)\n    avatar = models.URLField(max_length=255, null=True, blank=True)\n    # for social login\n    is_social = models.BooleanField(default=False)\n    provider = models.CharField(max_length=50, null=True, blank=True)  # 'google', 'facebook', etc.\n    social_uid = models.CharField(max_length=255, null=True, blank=True, unique=True)  # id của Google user\n    class Meta:\n        db_table = 'accounts_customuser'",
        "detail": "backend.apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "UserDetail",
        "kind": 6,
        "importPath": "backend.apps.accounts.models",
        "description": "backend.apps.accounts.models",
        "peekOfCode": "class UserDetail(models.Model):\n    user = models.OneToOneField(CustomUser, on_delete=models.CASCADE, related_name='user_detail')\n    name = models.CharField(max_length=255, blank=True, null=True)\n    phone = models.CharField(max_length=20, blank=True, null=True)\n    birthday = models.DateField(blank=True, null=True)\n    streak = models.IntegerField(default=0)\n    last_activity_date = models.DateField(null=True, blank=True)\n    address = models.CharField(max_length=255, blank=True, null=True)\n    joined_date = models.DateTimeField(auto_now_add=True)\n    bio = models.TextField(blank=True, null=True)",
        "detail": "backend.apps.accounts.models",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.apps.accounts.urls",
        "description": "backend.apps.accounts.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'', AuthViewSet, basename='user')\nrouter.register(r'user-detail', UserDetailViewSet, basename='user-detail')\nurlpatterns = [\n    path(\"\", include(router.urls)),\n    path(\"google/login/\", GoogleAuthView.as_view()),\n    path(\"facebook/login/\", FacebookAuthView.as_view()),\n    path('update-streak/', ResetStreakAPIView.as_view(), name='update-streak'),\n]",
        "detail": "backend.apps.accounts.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.apps.accounts.urls",
        "description": "backend.apps.accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(router.urls)),\n    path(\"google/login/\", GoogleAuthView.as_view()),\n    path(\"facebook/login/\", FacebookAuthView.as_view()),\n    path('update-streak/', ResetStreakAPIView.as_view(), name='update-streak'),\n]",
        "detail": "backend.apps.accounts.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.gamification.migrations.0001_initial",
        "description": "backend.apps.gamification.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='LeaderBoard',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.apps.gamification.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "LeaderBoard",
        "kind": 6,
        "importPath": "backend.apps.gamification.models.leader_board",
        "description": "backend.apps.gamification.models.leader_board",
        "peekOfCode": "class LeaderBoard(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)\n    total_score = models.IntegerField(default=0)  # Điểm số tổng hợp từ các bài học\n    date_updated = models.DateTimeField(auto_now=True)  # Thời gian cập nhật điểm số\n    class Meta:\n        db_table = 'api_leaderboard'\n        ordering = ['-total_score']\n    def __str__(self):\n        return f\"{self.user.username} - {self.total_score}\"",
        "detail": "backend.apps.gamification.models.leader_board",
        "documentation": {}
    },
    {
        "label": "LeaderBoardPagination",
        "kind": 6,
        "importPath": "backend.apps.gamification.paginations.leader_board_pagination",
        "description": "backend.apps.gamification.paginations.leader_board_pagination",
        "peekOfCode": "class LeaderBoardPagination(PageNumberPagination):\n    page_size = 10\n    page_size_query_param = 'page_size'\n    max_page_size = 10",
        "detail": "backend.apps.gamification.paginations.leader_board_pagination",
        "documentation": {}
    },
    {
        "label": "leaderboard_list_schema",
        "kind": 5,
        "importPath": "backend.apps.gamification.schemas.leader_board_schema",
        "description": "backend.apps.gamification.schemas.leader_board_schema",
        "peekOfCode": "leaderboard_list_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"page\", description=\"Số trang (bắt đầu từ 1)\", required=False, type=int),\n        OpenApiParameter(name=\"page_size\", description=\"Số lượng item mỗi trang\", required=False, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(\n            description=\"Danh sách xếp hạng người dùng\",\n            response={\n                \"type\": \"object\",",
        "detail": "backend.apps.gamification.schemas.leader_board_schema",
        "documentation": {}
    },
    {
        "label": "leaderboard_retrieve_schema",
        "kind": 5,
        "importPath": "backend.apps.gamification.schemas.leader_board_schema",
        "description": "backend.apps.gamification.schemas.leader_board_schema",
        "peekOfCode": "leaderboard_retrieve_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LeaderBoardSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy bản ghi\"),\n    },\n    description=\"Lấy thông tin xếp hạng của một người dùng cụ thể\"\n)",
        "detail": "backend.apps.gamification.schemas.leader_board_schema",
        "documentation": {}
    },
    {
        "label": "LeaderBoardSerializer",
        "kind": 6,
        "importPath": "backend.apps.gamification.serializers.leader_board_serializer",
        "description": "backend.apps.gamification.serializers.leader_board_serializer",
        "peekOfCode": "class LeaderBoardSerializer(serializers.ModelSerializer):\n    \"\"\"\n    Serializer cho bảng xếp hạng người dùng.\n    \"\"\"\n    username = serializers.CharField(source='user.username', read_only=True)\n    avatar = serializers.SerializerMethodField()\n    class Meta:\n        model = LeaderBoard\n        fields = ['username', 'total_score', 'avatar']\n        read_only_fields = ['username', 'total_score', 'avatar']",
        "detail": "backend.apps.gamification.serializers.leader_board_serializer",
        "documentation": {}
    },
    {
        "label": "LeaderBoardViewSet",
        "kind": 6,
        "importPath": "backend.apps.gamification.views.leader_board_views",
        "description": "backend.apps.gamification.views.leader_board_views",
        "peekOfCode": "class LeaderBoardViewSet(viewsets.ReadOnlyModelViewSet):\n    \"\"\"\n    API trả về bảng xếp hạng người dùng.\n    \"\"\"\n    serializer_class = LeaderBoardSerializer\n    # permission_classes = [IsAuthenticated]\n    pagination_class = LeaderBoardPagination\n    def get_queryset(self):\n        return LeaderBoard.objects.all()\n    @leaderboard_list_schema",
        "detail": "backend.apps.gamification.views.leader_board_views",
        "documentation": {}
    },
    {
        "label": "GamificationConfig",
        "kind": 6,
        "importPath": "backend.apps.gamification.apps",
        "description": "backend.apps.gamification.apps",
        "peekOfCode": "class GamificationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.gamification'",
        "detail": "backend.apps.gamification.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.apps.gamification.urls",
        "description": "backend.apps.gamification.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'leaderboard', LeaderBoardViewSet, basename='leaderboard')\nurlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend.apps.gamification.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.apps.gamification.urls",
        "description": "backend.apps.gamification.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend.apps.gamification.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.learning.migrations.0001_initial",
        "description": "backend.apps.learning.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Course',\n            fields=[\n                ('id', models.AutoField(primary_key=True, serialize=False)),\n                ('title', models.CharField(max_length=255)),",
        "detail": "backend.apps.learning.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Course",
        "kind": 6,
        "importPath": "backend.apps.learning.models.course",
        "description": "backend.apps.learning.models.course",
        "peekOfCode": "class Course(models.Model):\n    id = models.AutoField(primary_key=True)\n    title = models.CharField(max_length=255)\n    en_title = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(blank=True, null=True)\n    image = CloudinaryField('image', blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    icon = models.CharField(max_length=10, blank=True, null=True)\n    def __str__(self):",
        "detail": "backend.apps.learning.models.course",
        "documentation": {}
    },
    {
        "label": "Lesson",
        "kind": 6,
        "importPath": "backend.apps.learning.models.lesson",
        "description": "backend.apps.learning.models.lesson",
        "peekOfCode": "class Lesson(models.Model):\n    id = models.AutoField(primary_key=True)\n    title = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    image = CloudinaryField('image', blank=True, null=True)  # Hình ảnh bài học\n    created_at = models.DateTimeField(auto_now_add=True)  # Lưu thời gian khi tạo\n    updated_at = models.DateTimeField(auto_now=True)  # Lưu thời gian khi cập nhật\n    course = models.ForeignKey(Course, on_delete=models.SET_NULL, null=True, blank=True)\n    def __str__(self):\n        return self.title",
        "detail": "backend.apps.learning.models.lesson",
        "documentation": {}
    },
    {
        "label": "Word",
        "kind": 6,
        "importPath": "backend.apps.learning.models.word",
        "description": "backend.apps.learning.models.word",
        "peekOfCode": "class Word(models.Model):\n    id = models.AutoField(primary_key=True)\n    lesson = models.ForeignKey(Lesson, on_delete=models.SET_NULL, null=True, blank=True)\n    word = models.CharField(max_length=255)\n    pronunciation = models.CharField(max_length=255, blank=True, null=True)\n    pos = models.CharField(max_length=255, blank=True, null=True)\n    meaning = models.TextField()\n    example = models.TextField(blank=True, null=True)\n    example_vi = models.TextField(blank=True, null=True)\n    image = CloudinaryField('image', blank=True, null=True)  # Hình ảnh từ vựng",
        "detail": "backend.apps.learning.models.word",
        "documentation": {}
    },
    {
        "label": "CustomPagination",
        "kind": 6,
        "importPath": "backend.apps.learning.paginations.pagination",
        "description": "backend.apps.learning.paginations.pagination",
        "peekOfCode": "class CustomPagination(PageNumberPagination):\n    page_size = 9\n    page_size_query_param = 'page_size'\n    max_page_size = 20",
        "detail": "backend.apps.learning.paginations.pagination",
        "documentation": {}
    },
    {
        "label": "list_courses_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.course_schema",
        "description": "backend.apps.learning.schemas.course_schema",
        "peekOfCode": "list_courses_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: CourseSerializer(many=True),\n    },\n    description=\"Lấy danh sách tất cả các khóa học.\"\n)\nretrieve_course_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: CourseSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy khóa học\"),",
        "detail": "backend.apps.learning.schemas.course_schema",
        "documentation": {}
    },
    {
        "label": "retrieve_course_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.course_schema",
        "description": "backend.apps.learning.schemas.course_schema",
        "peekOfCode": "retrieve_course_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: CourseSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy khóa học\"),\n    },\n    description=\"Lấy thông tin chi tiết của một khóa học cụ thể.\"\n)\nget_lessons_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LessonSerializer(many=True),",
        "detail": "backend.apps.learning.schemas.course_schema",
        "documentation": {}
    },
    {
        "label": "get_lessons_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.course_schema",
        "description": "backend.apps.learning.schemas.course_schema",
        "peekOfCode": "get_lessons_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LessonSerializer(many=True),\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy khóa học\"),\n    },\n    description=\"Lấy danh sách các bài học của một khóa học cụ thể.\"\n)\nget_all_courses_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: CourseSerializer(many=True),",
        "detail": "backend.apps.learning.schemas.course_schema",
        "documentation": {}
    },
    {
        "label": "get_all_courses_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.course_schema",
        "description": "backend.apps.learning.schemas.course_schema",
        "peekOfCode": "get_all_courses_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: CourseSerializer(many=True),\n    },\n    description=\"Lấy danh sách tất cả các khóa học (alias của list).\"\n)",
        "detail": "backend.apps.learning.schemas.course_schema",
        "documentation": {}
    },
    {
        "label": "list_lessons_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.lesson_schema",
        "description": "backend.apps.learning.schemas.lesson_schema",
        "peekOfCode": "list_lessons_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LessonSerializer(many=True),\n    },\n    description=\"Lấy danh sách tất cả các bài học.\"\n)\nretrieve_lesson_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LessonSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy bài học\"),",
        "detail": "backend.apps.learning.schemas.lesson_schema",
        "documentation": {}
    },
    {
        "label": "retrieve_lesson_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.lesson_schema",
        "description": "backend.apps.learning.schemas.lesson_schema",
        "peekOfCode": "retrieve_lesson_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LessonSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy bài học\"),\n    },\n    description=\"Lấy thông tin chi tiết của một bài học cụ thể.\"\n)\nget_top_n_lessons_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"n\", description=\"Số lượng bài học muốn lấy\", required=False, type=int),",
        "detail": "backend.apps.learning.schemas.lesson_schema",
        "documentation": {}
    },
    {
        "label": "get_top_n_lessons_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.lesson_schema",
        "description": "backend.apps.learning.schemas.lesson_schema",
        "peekOfCode": "get_top_n_lessons_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"n\", description=\"Số lượng bài học muốn lấy\", required=False, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: LessonSerializer(many=True),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Định dạng số không hợp lệ\"),\n    },\n    description=\"Lấy top n bài học.\"\n)",
        "detail": "backend.apps.learning.schemas.lesson_schema",
        "documentation": {}
    },
    {
        "label": "get_words_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.lesson_schema",
        "description": "backend.apps.learning.schemas.lesson_schema",
        "peekOfCode": "get_words_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: WordSerializer(many=True),\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy bài học\"),\n    },\n    description=\"Lấy danh sách từ vựng của một bài học cụ thể.\"\n)\nget_lessons_by_course_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"course_id\", description=\"ID của khóa học\", required=True, type=int),",
        "detail": "backend.apps.learning.schemas.lesson_schema",
        "documentation": {}
    },
    {
        "label": "get_lessons_by_course_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.lesson_schema",
        "description": "backend.apps.learning.schemas.lesson_schema",
        "peekOfCode": "get_lessons_by_course_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"course_id\", description=\"ID của khóa học\", required=True, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: OnlyLessonSerializer(many=True),\n        status.HTTP_400_BAD_REQUEST: OpenApiResponse(description=\"Thiếu course_id\"),\n    },\n    description=\"Lấy danh sách bài học của một khóa học cụ thể.\"\n)",
        "detail": "backend.apps.learning.schemas.lesson_schema",
        "documentation": {}
    },
    {
        "label": "get_all_lessons_schema",
        "kind": 5,
        "importPath": "backend.apps.learning.schemas.lesson_schema",
        "description": "backend.apps.learning.schemas.lesson_schema",
        "peekOfCode": "get_all_lessons_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OnlyLessonSerializer(many=True),\n    },\n    description=\"Lấy danh sách tất cả các bài học (chỉ thông tin cơ bản).\"\n)",
        "detail": "backend.apps.learning.schemas.lesson_schema",
        "documentation": {}
    },
    {
        "label": "CourseSerializer",
        "kind": 6,
        "importPath": "backend.apps.learning.serializers.course_serializer",
        "description": "backend.apps.learning.serializers.course_serializer",
        "peekOfCode": "class CourseSerializer(serializers.ModelSerializer):\n    image = serializers.SerializerMethodField()\n    class Meta:\n        model = Course\n        fields = '__all__'\n    @extend_schema_field(CharField)\n    def get_image(self, obj) -> str:\n        return obj.image.url if obj.image else None",
        "detail": "backend.apps.learning.serializers.course_serializer",
        "documentation": {}
    },
    {
        "label": "LessonSerializer",
        "kind": 6,
        "importPath": "backend.apps.learning.serializers.lesson_serializer",
        "description": "backend.apps.learning.serializers.lesson_serializer",
        "peekOfCode": "class LessonSerializer(serializers.ModelSerializer):\n    words = WordSerializer(many=True, read_only=True, source='word_set') # Get the list of Word objects related to the Lesson\n    image = serializers.SerializerMethodField()\n    class Meta:\n        model = Lesson\n        fields = '__all__'\n    @extend_schema_field(CharField)\n    def get_image(self, obj):\n        return obj.image.url if obj.image else None\nclass OnlyLessonSerializer(serializers.ModelSerializer):",
        "detail": "backend.apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "OnlyLessonSerializer",
        "kind": 6,
        "importPath": "backend.apps.learning.serializers.lesson_serializer",
        "description": "backend.apps.learning.serializers.lesson_serializer",
        "peekOfCode": "class OnlyLessonSerializer(serializers.ModelSerializer):\n    word_count = serializers.IntegerField(read_only=True)  # Thêm field word_count từ annotate()\n    image = serializers.SerializerMethodField()\n    class Meta:\n        model = Lesson\n        fields = ['id', 'title', 'description', 'image', 'word_count']\n    @extend_schema_field(CharField)\n    def get_image(self, obj):\n        return obj.image.url if obj.image else None",
        "detail": "backend.apps.learning.serializers.lesson_serializer",
        "documentation": {}
    },
    {
        "label": "WordSerializer",
        "kind": 6,
        "importPath": "backend.apps.learning.serializers.word_serializer",
        "description": "backend.apps.learning.serializers.word_serializer",
        "peekOfCode": "class WordSerializer(serializers.ModelSerializer):\n    image = serializers.SerializerMethodField()\n    audio = serializers.SerializerMethodField()\n    class Meta:\n        model = Word\n        fields = ['id', 'word', 'pronunciation', 'pos', 'meaning',\n                  'example', 'example_vi', 'image', 'audio', 'cefr'\n                  ]\n    @extend_schema_field(CharField)\n    def get_image(self, obj):",
        "detail": "backend.apps.learning.serializers.word_serializer",
        "documentation": {}
    },
    {
        "label": "CourseViewSet",
        "kind": 6,
        "importPath": "backend.apps.learning.views.course_view",
        "description": "backend.apps.learning.views.course_view",
        "peekOfCode": "class CourseViewSet(viewsets.GenericViewSet):\n    serializer_class = CourseSerializer\n    permission_classes = [AllowAny]\n    http_method_names = ['get']\n    pagination_class = CustomPagination\n    def get_queryset(self):\n        return Course.objects.all().order_by('id')\n    @list_courses_schema\n    def list(self, request, *args, **kwargs):\n        queryset = self.get_queryset()",
        "detail": "backend.apps.learning.views.course_view",
        "documentation": {}
    },
    {
        "label": "LessonViewSet",
        "kind": 6,
        "importPath": "backend.apps.learning.views.lesson_view",
        "description": "backend.apps.learning.views.lesson_view",
        "peekOfCode": "class LessonViewSet(viewsets.GenericViewSet):\n    serializer_class = LessonSerializer\n    http_method_names = ['get']\n    def get_queryset(self):\n        return Lesson.objects.all().select_related('course').annotate(\n            word_count=Count('word')\n        ).order_by('id')\n    @list_lessons_schema\n    def list(self, request, *args, **kwargs):\n        queryset = self.get_queryset()",
        "detail": "backend.apps.learning.views.lesson_view",
        "documentation": {}
    },
    {
        "label": "LearningConfig",
        "kind": 6,
        "importPath": "backend.apps.learning.apps",
        "description": "backend.apps.learning.apps",
        "peekOfCode": "class LearningConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.learning'",
        "detail": "backend.apps.learning.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.apps.learning.urls",
        "description": "backend.apps.learning.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'courses', CourseViewSet, basename='course')\nrouter.register(r'lessons', LessonViewSet, basename='lesson')\nurlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend.apps.learning.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.apps.learning.urls",
        "description": "backend.apps.learning.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend.apps.learning.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.apps.progress.migrations.0001_initial",
        "description": "backend.apps.progress.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('learning', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CourseProgress',\n            fields=[",
        "detail": "backend.apps.progress.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CourseProgress",
        "kind": 6,
        "importPath": "backend.apps.progress.models.course_progress",
        "description": "backend.apps.progress.models.course_progress",
        "peekOfCode": "class CourseProgress(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='course_progress')\n    course = models.ForeignKey(Course, on_delete=models.CASCADE)\n    date_started = models.DateTimeField(auto_now_add=True)\n    date_completed = models.DateTimeField(null=True, blank=True)\n    class Meta:\n        db_table = 'api_usercourse'\n        constraints = [\n            models.UniqueConstraint(fields=['user', 'course'], name='unique_user_course')\n        ]",
        "detail": "backend.apps.progress.models.course_progress",
        "documentation": {}
    },
    {
        "label": "LessonProgress",
        "kind": 6,
        "importPath": "backend.apps.progress.models.lesson_progress",
        "description": "backend.apps.progress.models.lesson_progress",
        "peekOfCode": "class LessonProgress(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='lesson_progress')\n    lesson = models.ForeignKey(Lesson, on_delete=models.CASCADE)\n    date_started = models.DateTimeField(auto_now_add=True)\n    date_completed = models.DateTimeField(null=True, blank=True)\n    class Meta:\n        db_table = 'api_userlesson'\n        constraints = [\n            models.UniqueConstraint(fields=['user', 'lesson'], name='unique_user_lesson')\n        ]",
        "detail": "backend.apps.progress.models.lesson_progress",
        "documentation": {}
    },
    {
        "label": "VocabularyProgress",
        "kind": 6,
        "importPath": "backend.apps.progress.models.vocabulary_progress",
        "description": "backend.apps.progress.models.vocabulary_progress",
        "peekOfCode": "class VocabularyProgress(models.Model):\n    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, related_name='user_words')\n    word = models.ForeignKey(Word, on_delete=models.CASCADE, related_name='user_words')\n    level = models.PositiveSmallIntegerField(default=1)\n    next_review = models.DateTimeField(default=now)\n    last_review = models.DateTimeField(auto_now=True)\n    streak = models.PositiveIntegerField(default=1)\n    learned_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        db_table = 'api_userword'",
        "detail": "backend.apps.progress.models.vocabulary_progress",
        "documentation": {}
    },
    {
        "label": "CustomPagination",
        "kind": 6,
        "importPath": "backend.apps.progress.paginations.progress_pagination",
        "description": "backend.apps.progress.paginations.progress_pagination",
        "peekOfCode": "class CustomPagination(PageNumberPagination):\n    page_size = 9\n    page_size_query_param = 'page_size'\n    max_page_size = 20\nclass LearnedWordsPagination(PageNumberPagination):\n    page_size = 2\n    page_size_query_param = 'page_size'\n    max_page_size = 50",
        "detail": "backend.apps.progress.paginations.progress_pagination",
        "documentation": {}
    },
    {
        "label": "LearnedWordsPagination",
        "kind": 6,
        "importPath": "backend.apps.progress.paginations.progress_pagination",
        "description": "backend.apps.progress.paginations.progress_pagination",
        "peekOfCode": "class LearnedWordsPagination(PageNumberPagination):\n    page_size = 2\n    page_size_query_param = 'page_size'\n    max_page_size = 50",
        "detail": "backend.apps.progress.paginations.progress_pagination",
        "documentation": {}
    },
    {
        "label": "list_course_progress_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.course_progress_schema",
        "description": "backend.apps.progress.schemas.course_progress_schema",
        "peekOfCode": "list_course_progress_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"page\", description=\"Số trang\", required=False, type=int),\n        OpenApiParameter(name=\"page_size\", description=\"Số lượng phần tử mỗi trang\", required=False, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: CourseProgressSerializer(many=True),\n    },\n    description=\"Lấy danh sách các khóa học của người dùng (có phân trang).\"\n)",
        "detail": "backend.apps.progress.schemas.course_progress_schema",
        "documentation": {}
    },
    {
        "label": "retrieve_course_progress_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.course_progress_schema",
        "description": "backend.apps.progress.schemas.course_progress_schema",
        "peekOfCode": "retrieve_course_progress_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: CourseProgressSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy khóa học\"),\n    },\n    description=\"Lấy thông tin khóa học cụ thể của người dùng.\"\n)\nget_lessons_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"page\", description=\"Số trang\", required=False, type=int),",
        "detail": "backend.apps.progress.schemas.course_progress_schema",
        "documentation": {}
    },
    {
        "label": "get_lessons_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.course_progress_schema",
        "description": "backend.apps.progress.schemas.course_progress_schema",
        "peekOfCode": "get_lessons_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"page\", description=\"Số trang\", required=False, type=int),\n        OpenApiParameter(name=\"page_size\", description=\"Số lượng phần tử mỗi trang\", required=False, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: LessonProgressSerializer(many=True),\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy khóa học\"),\n    },\n    description=\"Lấy danh sách các bài học của khóa học cụ thể (có phân trang).\"",
        "detail": "backend.apps.progress.schemas.course_progress_schema",
        "documentation": {}
    },
    {
        "label": "list_lesson_progress_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.lesson_progress_schema",
        "description": "backend.apps.progress.schemas.lesson_progress_schema",
        "peekOfCode": "list_lesson_progress_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"page\", description=\"Số trang\", required=False, type=int),\n        OpenApiParameter(name=\"page_size\", description=\"Số lượng phần tử mỗi trang\", required=False, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: LessonProgressSerializer(many=True),\n    },\n    description=\"Lấy danh sách tiến độ bài học của người dùng hiện tại.\"\n)",
        "detail": "backend.apps.progress.schemas.lesson_progress_schema",
        "documentation": {}
    },
    {
        "label": "retrieve_lesson_progress_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.lesson_progress_schema",
        "description": "backend.apps.progress.schemas.lesson_progress_schema",
        "peekOfCode": "retrieve_lesson_progress_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: LessonProgressSerializer,\n        status.HTTP_404_NOT_FOUND: OpenApiResponse(description=\"Không tìm thấy bài học\"),\n    },\n    description=\"Lấy thông tin tiến độ của một bài học cụ thể.\"\n)\nget_words_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(",
        "detail": "backend.apps.progress.schemas.lesson_progress_schema",
        "documentation": {}
    },
    {
        "label": "get_words_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.lesson_progress_schema",
        "description": "backend.apps.progress.schemas.lesson_progress_schema",
        "peekOfCode": "get_words_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(\n            description=\"Danh sách từ vựng của bài học\",\n            response={\n                \"type\": \"object\",\n                \"properties\": {\n                    \"lesson_id\": {\"type\": \"integer\"},\n                    \"lesson_title\": {\"type\": \"string\"},\n                    \"lesson_description\": {\"type\": \"string\"},",
        "detail": "backend.apps.progress.schemas.lesson_progress_schema",
        "documentation": {}
    },
    {
        "label": "submit_words_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "description": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "peekOfCode": "submit_words_schema = extend_schema(\n    request=LessonWordsInputSerializer,\n    examples=[\n        OpenApiExample(\n            'Submit new words',\n            value={\n                \"is_review\": False,\n                \"lesson_id\": 12,\n                \"words\": [\n                    {",
        "detail": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "documentation": {}
    },
    {
        "label": "get_words_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "description": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "peekOfCode": "get_words_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: VocabularyProgressOutputSerializer(many=True),\n    },\n    description=\"Lấy danh sách tất cả từ vựng đã học của người dùng.\"\n)\ncount_words_by_level_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(\n            description=\"Thống kê số lượng từ theo cấp độ và phân loại CEFR\",",
        "detail": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "documentation": {}
    },
    {
        "label": "count_words_by_level_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "description": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "peekOfCode": "count_words_by_level_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(\n            description=\"Thống kê số lượng từ theo cấp độ và phân loại CEFR\",\n            response={\n                \"type\": \"object\",\n                \"properties\": {\n                    \"level_counts\": {\n                        \"type\": \"object\",\n                        \"properties\": {",
        "detail": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "documentation": {}
    },
    {
        "label": "learned_words_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "description": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "peekOfCode": "learned_words_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(\n            description=\"Danh sách từ vựng đã học phân theo cấp độ\",\n            response={\n                \"type\": \"object\",\n                \"properties\": {\n                    \"time_until_next_review\": {\"type\": \"string\"},\n                    \"review_word_count\": {\"type\": \"integer\"},\n                    \"level_counts\": {\"type\": \"object\"},",
        "detail": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "documentation": {}
    },
    {
        "label": "review_words_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "description": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "peekOfCode": "review_words_schema = extend_schema(\n    responses={\n        status.HTTP_200_OK: OpenApiResponse(\n            description=\"Danh sách từ vựng cần ôn tập\",\n            response={\n                \"type\": \"object\",\n                \"properties\": {\n                    \"words\": {\"type\": \"array\", \"items\": {\"$ref\": \"#/components/schemas/VocabularyProgressOutput\"}}\n                }\n            }",
        "detail": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "documentation": {}
    },
    {
        "label": "learned_words_pagination_schema",
        "kind": 5,
        "importPath": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "description": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "peekOfCode": "learned_words_pagination_schema = extend_schema(\n    parameters=[\n        OpenApiParameter(name=\"level\", description=\"Lọc theo cấp độ từ vựng (1-5)\", required=False, type=int),\n        OpenApiParameter(name=\"page\", description=\"Số trang\", required=False, type=int),\n        OpenApiParameter(name=\"page_size\", description=\"Số lượng phần tử mỗi trang\", required=False, type=int),\n    ],\n    responses={\n        status.HTTP_200_OK: LearnedWordsSerializer(many=True),\n    },\n    description=\"Lấy danh sách từ vựng đã học (có phân trang và lọc theo cấp độ).\"",
        "detail": "backend.apps.progress.schemas.vocabulary_progress_schema",
        "documentation": {}
    },
    {
        "label": "CourseProgressSerializer",
        "kind": 6,
        "importPath": "backend.apps.progress.serializers.course_progress",
        "description": "backend.apps.progress.serializers.course_progress",
        "peekOfCode": "class CourseProgressSerializer(serializers.ModelSerializer):\n    is_learned = serializers.SerializerMethodField()\n    lesson_count = serializers.IntegerField(read_only=True)\n    image = serializers.SerializerMethodField()\n    progress = serializers.SerializerMethodField()\n    learner_count = serializers.IntegerField(read_only=True)\n    class Meta:\n        model = Course\n        fields = [\n            'id',",
        "detail": "backend.apps.progress.serializers.course_progress",
        "documentation": {}
    },
    {
        "label": "LessonProgressSerializer",
        "kind": 6,
        "importPath": "backend.apps.progress.serializers.lesson_progress",
        "description": "backend.apps.progress.serializers.lesson_progress",
        "peekOfCode": "class LessonProgressSerializer(serializers.ModelSerializer):\n    is_learned = serializers.SerializerMethodField()\n    word_count = serializers.IntegerField(read_only=True)\n    image = serializers.SerializerMethodField()\n    class Meta:\n        model = Lesson\n        fields = [\n            'id',\n            'title',\n            'description',",
        "detail": "backend.apps.progress.serializers.lesson_progress",
        "documentation": {}
    },
    {
        "label": "LessonWordsInputSerializer",
        "kind": 6,
        "importPath": "backend.apps.progress.serializers.lesson_progress",
        "description": "backend.apps.progress.serializers.lesson_progress",
        "peekOfCode": "class LessonWordsInputSerializer(serializers.Serializer):\n    is_review = serializers.BooleanField(required=True)\n    lesson_id = serializers.IntegerField(required=False)  # Bắt buộc nếu is_review == false\n    words = VocabularyProgressInputSerializer(many=True, required=True)\n    def validate(self, attrs):\n        is_review = attrs.get(\"is_review\")\n        lesson_id = attrs.get(\"lesson_id\")\n        if not is_review and lesson_id is None:\n            raise serializers.ValidationError({\n                \"lesson_id\": \"Trường này là bắt buộc khi is_review là False.\"",
        "detail": "backend.apps.progress.serializers.lesson_progress",
        "documentation": {}
    },
    {
        "label": "VocabularyProgressInputSerializer",
        "kind": 6,
        "importPath": "backend.apps.progress.serializers.vocabulary_progress",
        "description": "backend.apps.progress.serializers.vocabulary_progress",
        "peekOfCode": "class VocabularyProgressInputSerializer(serializers.Serializer):\n    word_id = serializers.IntegerField(required=True)\n    level = serializers.IntegerField(required=True, min_value=1, max_value=5)\n    streak = serializers.IntegerField(required=True, min_value=1, max_value=10)\n    # is_correct được yêu cầu nếu is_review = true ở cấp cha; để đây tùy chọn:\n    is_correct = serializers.BooleanField(required=False)\n    question_type = serializers.CharField(required=True)\n    def validate_word_id(self, value):\n        if not Word.objects.filter(id=value).exists():\n            raise serializers.ValidationError(\"Từ với ID này không tồn tại.\")",
        "detail": "backend.apps.progress.serializers.vocabulary_progress",
        "documentation": {}
    },
    {
        "label": "VocabularyProgressOutputSerializer",
        "kind": 6,
        "importPath": "backend.apps.progress.serializers.vocabulary_progress",
        "description": "backend.apps.progress.serializers.vocabulary_progress",
        "peekOfCode": "class VocabularyProgressOutputSerializer(serializers.ModelSerializer):\n    word = WordSerializer()\n    class Meta:\n        model = VocabularyProgress\n        fields = '__all__'\nclass LearnedWordsSerializer(serializers.ModelSerializer):\n    word = WordSerializer()\n    class Meta:\n        model = VocabularyProgress\n        fields = '__all__'",
        "detail": "backend.apps.progress.serializers.vocabulary_progress",
        "documentation": {}
    },
    {
        "label": "LearnedWordsSerializer",
        "kind": 6,
        "importPath": "backend.apps.progress.serializers.vocabulary_progress",
        "description": "backend.apps.progress.serializers.vocabulary_progress",
        "peekOfCode": "class LearnedWordsSerializer(serializers.ModelSerializer):\n    word = WordSerializer()\n    class Meta:\n        model = VocabularyProgress\n        fields = '__all__'",
        "detail": "backend.apps.progress.serializers.vocabulary_progress",
        "documentation": {}
    },
    {
        "label": "calculate_next_review",
        "kind": 2,
        "importPath": "backend.apps.progress.services.calculate_next_review",
        "description": "backend.apps.progress.services.calculate_next_review",
        "peekOfCode": "def calculate_next_review(level, streak, question_type):\n    \"\"\"\n    Tính toán thời gian ôn tập tiếp theo dựa trên level, streak và question_type,\n    cộng thêm một số phút ngẫu nhiên.\n    :param level: int, ví dụ từ 1 đến 5\n    :param streak: int, số lần ôn tập liên tục\n    :param question_type: str, ví dụ \"L1\", \"L2\", ...\n    :return: datetime, thời điểm next_review\n    \"\"\"\n    # Tính số giờ cơ bản",
        "detail": "backend.apps.progress.services.calculate_next_review",
        "documentation": {}
    },
    {
        "label": "calculate_time_until_next_review",
        "kind": 2,
        "importPath": "backend.apps.progress.services.calculate_next_review",
        "description": "backend.apps.progress.services.calculate_next_review",
        "peekOfCode": "def calculate_time_until_next_review(cutoff_time):\n    \"\"\"\n    Tính toán thời gian còn lại cho đến lần ôn tập tiếp theo.\n    :param cutoff_time: datetime, thời điểm ôn tập tiếp theo\n    :return: dict, chứa hours, minutes, seconds còn lại\n    \"\"\"\n    delta = cutoff_time - timezone.now()\n    total_seconds = int(delta.total_seconds())\n    hours, remainder = divmod(total_seconds, 3600)\n    minutes, seconds = divmod(remainder, 60)",
        "detail": "backend.apps.progress.services.calculate_next_review",
        "documentation": {}
    },
    {
        "label": "level_time",
        "kind": 5,
        "importPath": "backend.apps.progress.services.calculate_next_review",
        "description": "backend.apps.progress.services.calculate_next_review",
        "peekOfCode": "level_time = [0.5, 2.5, 12.5, 62.5, 312.5]  # Giá trị cơ bản theo level (1-5)\nquestion_type_times = {\n    \"L1\": 1,\n    \"L2\": 1.1,\n    \"L3\": 1.2,\n    \"L4\": 1.3,\n    \"L5\": 1.5,\n}\ndef calculate_next_review(level, streak, question_type):\n    \"\"\"",
        "detail": "backend.apps.progress.services.calculate_next_review",
        "documentation": {}
    },
    {
        "label": "question_type_times",
        "kind": 5,
        "importPath": "backend.apps.progress.services.calculate_next_review",
        "description": "backend.apps.progress.services.calculate_next_review",
        "peekOfCode": "question_type_times = {\n    \"L1\": 1,\n    \"L2\": 1.1,\n    \"L3\": 1.2,\n    \"L4\": 1.3,\n    \"L5\": 1.5,\n}\ndef calculate_next_review(level, streak, question_type):\n    \"\"\"\n    Tính toán thời gian ôn tập tiếp theo dựa trên level, streak và question_type,",
        "detail": "backend.apps.progress.services.calculate_next_review",
        "documentation": {}
    },
    {
        "label": "VocabularyProgressService",
        "kind": 6,
        "importPath": "backend.apps.progress.services.vocabulary_progress_service",
        "description": "backend.apps.progress.services.vocabulary_progress_service",
        "peekOfCode": "class VocabularyProgressService:\n    @staticmethod\n    def validate_words_data(data):\n        parent_serializer = LessonWordsInputSerializer(data=data)\n        parent_serializer.is_valid(raise_exception=True)\n        return parent_serializer.validated_data\n    @staticmethod\n    def submit_words(user, data, request=None):\n        validated_data = VocabularyProgressService.validate_words_data(data)\n        is_review = validated_data['is_review']",
        "detail": "backend.apps.progress.services.vocabulary_progress_service",
        "documentation": {}
    },
    {
        "label": "process_model",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "def process_model(word):\n    global m_index\n    while True:\n        model = models[m_index]\n        try:\n            prompt = f\"\"\"Hãy phân loại từ vựng \"{word}\" thành các mức độ như:\n            A1, A2, B1, B2, C1, C2\n            Chỉ trả lời một từ: A1, A2, B1, B2, C1, C2\"\"\"\n            response = model.generate_content(prompt)\n            return response.text.strip()",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "classify_words",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "def classify_words():\n    w_index = 0\n    while w_index < len(words):\n        word = words[w_index]\n        if word.cefr:\n            print(f\"⚠️ Từ {word} đã được phân loại\")\n            w_index += 1\n            continue\n        sleep_time = sleep_times[m_index]\n        try:",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "API_KEY",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "API_KEY = \"AIzaSyCd99aR3QixOsQNV9V1kIWi7g3SasGBtQQ\"\ngenai.configure(api_key=API_KEY)\n# Danh sách model và RPM\nmodel_rpm = {\n    \"gemini-2.0-flash-lite\": 30,\n    \"gemini-2.0-flash-lite-001\": 30,\n    \"gemini-2.0-flash-lite-preview-02-05\": 30,\n    \"gemini-2.0-flash-lite-preview\": 30,\n    \"gemma-3-27b-it\": 30,\n    \"gemini-2.0-flash\": 15,",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "model_rpm",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "model_rpm = {\n    \"gemini-2.0-flash-lite\": 30,\n    \"gemini-2.0-flash-lite-001\": 30,\n    \"gemini-2.0-flash-lite-preview-02-05\": 30,\n    \"gemini-2.0-flash-lite-preview\": 30,\n    \"gemma-3-27b-it\": 30,\n    \"gemini-2.0-flash\": 15,\n    \"gemini-2.0-flash-001\": 15,\n    \"gemini-1.5-flash\": 15,\n    \"gemini-1.5-flash-002\": 15,",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "sorted_models",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "sorted_models = sorted(model_rpm.keys(), key=lambda x: model_rpm[x], reverse=True)\nmodels = [genai.GenerativeModel(name) for name in sorted_models]\n# Tính toán thời gian sleep cho từng model\nsleep_times = [2 / rpm for rpm in model_rpm.values()]\n# Lấy danh sách từ vựng cần xử lý\nwords = list(Word.objects.all())\nm_index = 0\n# Hàm xử lý từng model\ndef process_model(word):\n    global m_index",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "models",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "models = [genai.GenerativeModel(name) for name in sorted_models]\n# Tính toán thời gian sleep cho từng model\nsleep_times = [2 / rpm for rpm in model_rpm.values()]\n# Lấy danh sách từ vựng cần xử lý\nwords = list(Word.objects.all())\nm_index = 0\n# Hàm xử lý từng model\ndef process_model(word):\n    global m_index\n    while True:",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "sleep_times",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "sleep_times = [2 / rpm for rpm in model_rpm.values()]\n# Lấy danh sách từ vựng cần xử lý\nwords = list(Word.objects.all())\nm_index = 0\n# Hàm xử lý từng model\ndef process_model(word):\n    global m_index\n    while True:\n        model = models[m_index]\n        try:",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "words",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "words = list(Word.objects.all())\nm_index = 0\n# Hàm xử lý từng model\ndef process_model(word):\n    global m_index\n    while True:\n        model = models[m_index]\n        try:\n            prompt = f\"\"\"Hãy phân loại từ vựng \"{word}\" thành các mức độ như:\n            A1, A2, B1, B2, C1, C2",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "m_index",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.classify_word",
        "description": "backend.apps.progress.utils.classify_word",
        "peekOfCode": "m_index = 0\n# Hàm xử lý từng model\ndef process_model(word):\n    global m_index\n    while True:\n        model = models[m_index]\n        try:\n            prompt = f\"\"\"Hãy phân loại từ vựng \"{word}\" thành các mức độ như:\n            A1, A2, B1, B2, C1, C2\n            Chỉ trả lời một từ: A1, A2, B1, B2, C1, C2\"\"\"",
        "detail": "backend.apps.progress.utils.classify_word",
        "documentation": {}
    },
    {
        "label": "process_course",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_courses",
        "description": "backend.apps.progress.utils.fetch_courses",
        "peekOfCode": "def process_course(course):\n    if course['id'] != 16 and course['id'] != 17:\n        return\n    \"\"\"Xử lý từng course: upload ảnh và lưu vào database.\"\"\"\n    image_url = course.get(\"image\", None)\n    uploaded_image = None\n    if image_url:\n        try:\n            print(f\"🔹 Đang upload ảnh cho bài học {course['title']}: {image_url}\")\n            uploaded_image = cloudinary.uploader.upload(image_url, folder=\"courses\")",
        "detail": "backend.apps.progress.utils.fetch_courses",
        "documentation": {}
    },
    {
        "label": "fetch_courses",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_courses",
        "description": "backend.apps.progress.utils.fetch_courses",
        "peekOfCode": "def fetch_courses():\n    \"\"\"Lấy danh sách bài học và xử lý chúng bằng đa luồng.\"\"\"\n    response = requests.get(courses_url, headers=headers)\n    if response.status_code == 200:\n        courses_data = response.json()[\"data\"]\n        with ThreadPoolExecutor(max_workers=5) as executor:  # Sử dụng tối đa 5 luồng\n            executor.map(process_course, courses_data)\n        print(\"✅ Tất cả bài học đã được xử lý xong!\")\n    else:\n        print(f\"❌ Lỗi lấy dữ liệu Lesson: {response.status_code} - {response.text}\")",
        "detail": "backend.apps.progress.utils.fetch_courses",
        "documentation": {}
    },
    {
        "label": "courses_url",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.fetch_courses",
        "description": "backend.apps.progress.utils.fetch_courses",
        "peekOfCode": "courses_url = \"https://mochien-server.mochidemy.com/v3.0/course/get-course-ios\"\nheaders = {\n    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoxMTg3MzcyLCJlbWFpbCI6ImRvdHVhbmd2QGdtYWlsLmNvbSIsInRva2VuIjoiNjdjNWJjM2U5ZDdjYSIsImlwIjoiMTE4LjcxLjIyMS4xOTciLCJleHAiOjE3NzI1NDgwMzB9.7McKOsunhE8UaoV-ADrxLwCuPHlYzekV345CqjQ4sBA\",\n    \"PrivateKey\": \"M0ch1M0ch1_En_$ecret_k3y\",\n    \"Accept\": \"application/json\"\n}\ndef process_course(course):\n    if course['id'] != 16 and course['id'] != 17:\n        return\n    \"\"\"Xử lý từng course: upload ảnh và lưu vào database.\"\"\"",
        "detail": "backend.apps.progress.utils.fetch_courses",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.fetch_courses",
        "description": "backend.apps.progress.utils.fetch_courses",
        "peekOfCode": "headers = {\n    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoxMTg3MzcyLCJlbWFpbCI6ImRvdHVhbmd2QGdtYWlsLmNvbSIsInRva2VuIjoiNjdjNWJjM2U5ZDdjYSIsImlwIjoiMTE4LjcxLjIyMS4xOTciLCJleHAiOjE3NzI1NDgwMzB9.7McKOsunhE8UaoV-ADrxLwCuPHlYzekV345CqjQ4sBA\",\n    \"PrivateKey\": \"M0ch1M0ch1_En_$ecret_k3y\",\n    \"Accept\": \"application/json\"\n}\ndef process_course(course):\n    if course['id'] != 16 and course['id'] != 17:\n        return\n    \"\"\"Xử lý từng course: upload ảnh và lưu vào database.\"\"\"\n    image_url = course.get(\"image\", None)",
        "detail": "backend.apps.progress.utils.fetch_courses",
        "documentation": {}
    },
    {
        "label": "process_lesson",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_lessons",
        "description": "backend.apps.progress.utils.fetch_lessons",
        "peekOfCode": "def process_lesson(lesson):\n    \"\"\"Xử lý từng lesson: upload ảnh và lưu vào database.\"\"\"\n    image_url = lesson.get(\"image\", None)\n    uploaded_image = None\n    if image_url:\n        try:\n            print(f\"🔹 Đang upload ảnh cho bài học {lesson['title']}: {image_url}\")\n            uploaded_image = cloudinary.uploader.upload(image_url, folder=\"lessons\")\n        except Exception as e:\n            print(f\"❌ Lỗi upload ảnh {image_url}: {e}\")",
        "detail": "backend.apps.progress.utils.fetch_lessons",
        "documentation": {}
    },
    {
        "label": "fetch_lessons",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_lessons",
        "description": "backend.apps.progress.utils.fetch_lessons",
        "peekOfCode": "def fetch_lessons():\n    \"\"\"Lấy danh sách bài học và xử lý chúng bằng đa luồng.\"\"\"\n    course_ids = [16, 17, 11]  # ID của các course cần lấy bài học\n    for course_id in course_ids:\n        url = lesson_url.format(course_id=course_id)\n        response = requests.get(url, headers=headers)\n        if response.status_code == 200:\n            lessons_data = response.json()[\"pageProps\"][\"courseData\"]\n            with ThreadPoolExecutor(max_workers=5) as executor:  # Sử dụng tối đa 5 luồng\n                executor.map(process_lesson, lessons_data)",
        "detail": "backend.apps.progress.utils.fetch_lessons",
        "documentation": {}
    },
    {
        "label": "process_lessons_course",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_lessons",
        "description": "backend.apps.progress.utils.fetch_lessons",
        "peekOfCode": "def process_lessons_course(lesson, course):\n    # if course.id != 16 and course.id != 17:\n    #     print(f\"⚠️ Bỏ qua Course {course.title}\")\n    #     return\n    # print(f\"🔄 DEBUG: Đang vào process_lessons_course() với bài học ID: {lesson.get('id', 'N/A')}\")\n    print(f\"🔹 Đang xử lý bài học: {lesson['title']}\")\n    try:\n        lesson_db = Lesson.objects.get(id=lesson[\"id\"])\n        if lesson_db.course:\n            print(f\"⚠️ Bài học {lesson['title']} đã có course {lesson_db.course.title}. Bỏ qua!\")",
        "detail": "backend.apps.progress.utils.fetch_lessons",
        "documentation": {}
    },
    {
        "label": "update_lessons_course",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_lessons",
        "description": "backend.apps.progress.utils.fetch_lessons",
        "peekOfCode": "def update_lessons_course():\n    \"\"\"Cập nhật course cho từng lesson.\"\"\"\n    course_ids = [16, 17, 11]  # ID của các course cần cập nhật\n    course_id = 8\n    # for _ in range(3):\n    for course_id in course_ids:\n        course = Course.objects.get(id=course_id)\n    #     for course in Course.objects.all():\n        url = lesson_url.format(course_id=course.id)\n        response = requests.get(url, headers=headers)",
        "detail": "backend.apps.progress.utils.fetch_lessons",
        "documentation": {}
    },
    {
        "label": "lesson_url",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.fetch_lessons",
        "description": "backend.apps.progress.utils.fetch_lessons",
        "peekOfCode": "lesson_url = \"https://learn.mochidemy.com/_next/data/jqRIFJk7WgjBGC9nBJxa0/vi/learn/{course_id}.json?courseId={course_id}\"\nheaders = {\n    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoxMTg3MzcyLCJlbWFpbCI6ImRvdHVhbmd2QGdtYWlsLmNvbSIsInRva2VuIjoiNjdjNWJjM2U5ZDdjYSIsImlwIjoiMTE4LjcxLjIyMS4xOTciLCJleHAiOjE3NzI1NDgwMzB9.7McKOsunhE8UaoV-ADrxLwCuPHlYzekV345CqjQ4sBA\",\n    \"PrivateKey\": \"M0ch1M0ch1_En_$ecret_k3y\",\n    \"Accept\": \"application/json\"\n}\ndef process_lesson(lesson):\n    \"\"\"Xử lý từng lesson: upload ảnh và lưu vào database.\"\"\"\n    image_url = lesson.get(\"image\", None)\n    uploaded_image = None",
        "detail": "backend.apps.progress.utils.fetch_lessons",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.fetch_lessons",
        "description": "backend.apps.progress.utils.fetch_lessons",
        "peekOfCode": "headers = {\n    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoxMTg3MzcyLCJlbWFpbCI6ImRvdHVhbmd2QGdtYWlsLmNvbSIsInRva2VuIjoiNjdjNWJjM2U5ZDdjYSIsImlwIjoiMTE4LjcxLjIyMS4xOTciLCJleHAiOjE3NzI1NDgwMzB9.7McKOsunhE8UaoV-ADrxLwCuPHlYzekV345CqjQ4sBA\",\n    \"PrivateKey\": \"M0ch1M0ch1_En_$ecret_k3y\",\n    \"Accept\": \"application/json\"\n}\ndef process_lesson(lesson):\n    \"\"\"Xử lý từng lesson: upload ảnh và lưu vào database.\"\"\"\n    image_url = lesson.get(\"image\", None)\n    uploaded_image = None\n    if image_url:",
        "detail": "backend.apps.progress.utils.fetch_lessons",
        "documentation": {}
    },
    {
        "label": "upload_to_cloudinary",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_words",
        "description": "backend.apps.progress.utils.fetch_words",
        "peekOfCode": "def upload_to_cloudinary(url, folder, resource_type=\"image\"):\n    \"\"\"Upload file lên Cloudinary\"\"\"\n    if not url:\n        return None\n    try:\n        response = cloudinary.uploader.upload(url, folder=folder, resource_type=resource_type)\n        return response[\"secure_url\"]\n    except Exception as e:\n        print(f\"❌ Lỗi upload {resource_type}: {e}\")\n        return None",
        "detail": "backend.apps.progress.utils.fetch_words",
        "documentation": {}
    },
    {
        "label": "process_lesson",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_words",
        "description": "backend.apps.progress.utils.fetch_words",
        "peekOfCode": "def process_lesson(lesson):\n    if lesson.course_id not in [16, 17, 11, 8]:\n        return\n    if lesson.words.count() > 0:\n        print(f\"🔹 Bài học {lesson.title} đã có từ vựng, bỏ qua!\")\n    \"\"\"Xử lý từ vựng cho từng bài học\"\"\"\n    print(f\"🔹 Đang xử lý bài học: {lesson.title}\")\n    word_url = word_api_template.format(lesson_id=lesson.id)\n    response = requests.get(word_url, headers=headers)\n    if response.status_code != 200:",
        "detail": "backend.apps.progress.utils.fetch_words",
        "documentation": {}
    },
    {
        "label": "add_pos_to_words",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_words",
        "description": "backend.apps.progress.utils.fetch_words",
        "peekOfCode": "def add_pos_to_words(lesson):\n    word_url = word_api_template.format(lesson_id=lesson.id)\n    response = requests.get(word_url, headers=headers)\n    if response.status_code != 200:\n        print(f\"❌ Lỗi API {response.status_code} - {response.text}\")\n        return\n    try:\n        words_data = response.json().get(\"data\", [])\n    except requests.exceptions.JSONDecodeError:\n        print(\"❌ Lỗi: API không trả về JSON hợp lệ!\")",
        "detail": "backend.apps.progress.utils.fetch_words",
        "documentation": {}
    },
    {
        "label": "fetch_words",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.fetch_words",
        "description": "backend.apps.progress.utils.fetch_words",
        "peekOfCode": "def fetch_words():\n    \"\"\"Hàm chính để tải toàn bộ từ vựng\"\"\"\n    lessons = Lesson.objects.all()\n    with ThreadPoolExecutor(max_workers=10) as executor:  # Giới hạn 3 luồng tải bài học\n        executor.map(add_pos_to_words, lessons)",
        "detail": "backend.apps.progress.utils.fetch_words",
        "documentation": {}
    },
    {
        "label": "word_api_template",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.fetch_words",
        "description": "backend.apps.progress.utils.fetch_words",
        "peekOfCode": "word_api_template = \"https://mochien-server-release.mochidemy.com/api/v5.0/lesson/words?lesson_id={lesson_id}\"\n# Headers cho request\nheaders = {\n    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoxMTg3MzcyLCJlbWFpbCI6ImRvdHVhbmd2QGdtYWlsLmNvbSIsInRva2VuIjoiNjdjNWJjM2U5ZDdjYSIsImlwIjoiMTE4LjcxLjIyMS4xOTciLCJleHAiOjE3NzI1NDgwMzB9.7McKOsunhE8UaoV-ADrxLwCuPHlYzekV345CqjQ4sBA\",\n    \"PrivateKey\": \"M0ch1M0ch1_En_$ecret_k3y\",\n    \"Accept\": \"application/json\"\n}\ndef upload_to_cloudinary(url, folder, resource_type=\"image\"):\n    \"\"\"Upload file lên Cloudinary\"\"\"\n    if not url:",
        "detail": "backend.apps.progress.utils.fetch_words",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "backend.apps.progress.utils.fetch_words",
        "description": "backend.apps.progress.utils.fetch_words",
        "peekOfCode": "headers = {\n    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoxMTg3MzcyLCJlbWFpbCI6ImRvdHVhbmd2QGdtYWlsLmNvbSIsInRva2VuIjoiNjdjNWJjM2U5ZDdjYSIsImlwIjoiMTE4LjcxLjIyMS4xOTciLCJleHAiOjE3NzI1NDgwMzB9.7McKOsunhE8UaoV-ADrxLwCuPHlYzekV345CqjQ4sBA\",\n    \"PrivateKey\": \"M0ch1M0ch1_En_$ecret_k3y\",\n    \"Accept\": \"application/json\"\n}\ndef upload_to_cloudinary(url, folder, resource_type=\"image\"):\n    \"\"\"Upload file lên Cloudinary\"\"\"\n    if not url:\n        return None\n    try:",
        "detail": "backend.apps.progress.utils.fetch_words",
        "documentation": {}
    },
    {
        "label": "get_review_ready_words",
        "kind": 2,
        "importPath": "backend.apps.progress.utils.get_review_ready_words",
        "description": "backend.apps.progress.utils.get_review_ready_words",
        "peekOfCode": "def get_review_ready_words(user):\n    \"\"\"\n    Trả về tuple (cutoff_time, queryset) với:\n      - cutoff_time = max(min(next_review) + 180 phút, now)\n      - queryset các từ của user có next_review <= cutoff_time\n    \"\"\"\n    now = timezone.now()\n    result = VocabularyProgress.objects.filter(user=user).aggregate(min_next=Min('next_review'))\n    min_next_review = result.get('min_next')\n    if min_next_review is None:",
        "detail": "backend.apps.progress.utils.get_review_ready_words",
        "documentation": {}
    },
    {
        "label": "CourseProgressViewSet",
        "kind": 6,
        "importPath": "backend.apps.progress.views.course_progress_view",
        "description": "backend.apps.progress.views.course_progress_view",
        "peekOfCode": "class CourseProgressViewSet(viewsets.ReadOnlyModelViewSet):\n    serializer_class = CourseProgressSerializer\n    pagination_class = CustomPagination\n    def get_queryset(self):\n        queryset = Course.objects.all().order_by('id').annotate(\n            lesson_count=Coalesce(Subquery(lesson_count_subquery, output_field=IntegerField()), Value(0)),\n            learner_count=Coalesce(Subquery(learner_count_subquery, output_field=IntegerField()), Value(0))\n        )\n        return queryset\n    def get_serializer_context(self):",
        "detail": "backend.apps.progress.views.course_progress_view",
        "documentation": {}
    },
    {
        "label": "lesson_count_subquery",
        "kind": 5,
        "importPath": "backend.apps.progress.views.course_progress_view",
        "description": "backend.apps.progress.views.course_progress_view",
        "peekOfCode": "lesson_count_subquery = Lesson.objects.filter(course=OuterRef('pk')) \\\n    .values('course') \\\n    .annotate(cnt=Count('id')) \\\n    .values('cnt')\n# Subquery để đếm số user course của một Course\nlearner_count_subquery = CourseProgress.objects.filter(course=OuterRef('pk')) \\\n    .values('course') \\\n    .annotate(cnt=Count('id')) \\\n    .values('cnt')\n# @permission_classes([IsAuthenticated])",
        "detail": "backend.apps.progress.views.course_progress_view",
        "documentation": {}
    },
    {
        "label": "learner_count_subquery",
        "kind": 5,
        "importPath": "backend.apps.progress.views.course_progress_view",
        "description": "backend.apps.progress.views.course_progress_view",
        "peekOfCode": "learner_count_subquery = CourseProgress.objects.filter(course=OuterRef('pk')) \\\n    .values('course') \\\n    .annotate(cnt=Count('id')) \\\n    .values('cnt')\n# @permission_classes([IsAuthenticated])\nclass CourseProgressViewSet(viewsets.ReadOnlyModelViewSet):\n    serializer_class = CourseProgressSerializer\n    pagination_class = CustomPagination\n    def get_queryset(self):\n        queryset = Course.objects.all().order_by('id').annotate(",
        "detail": "backend.apps.progress.views.course_progress_view",
        "documentation": {}
    },
    {
        "label": "LessonProgressViewSet",
        "kind": 6,
        "importPath": "backend.apps.progress.views.lesson_progress_view",
        "description": "backend.apps.progress.views.lesson_progress_view",
        "peekOfCode": "class LessonProgressViewSet(viewsets.ReadOnlyModelViewSet):\n    queryset = Lesson.objects.all().order_by('id').annotate(word_count=Count('word')).prefetch_related('word_set')\n    serializer_class = LessonProgressSerializer\n    pagination_class = CustomPagination\n    def get_serializer_context(self):\n        context = super().get_serializer_context()\n        context.update({\"request\": self.request})\n        return context\n    @list_lesson_progress_schema\n    def list(self, request, *args, **kwargs):",
        "detail": "backend.apps.progress.views.lesson_progress_view",
        "documentation": {}
    },
    {
        "label": "VocabularyProgressViewSet",
        "kind": 6,
        "importPath": "backend.apps.progress.views.vocabulary_progress_view",
        "description": "backend.apps.progress.views.vocabulary_progress_view",
        "peekOfCode": "class VocabularyProgressViewSet(viewsets.ModelViewSet):\n    queryset = VocabularyProgress.objects.all()\n    serializer_class = VocabularyProgressOutputSerializer\n    def get_queryset(self):\n        # Only get data for the current user with related word info\n        return VocabularyProgress.objects.filter(user=self.request.user).select_related('word')\n    @action(detail=False, methods=['post'], url_path='submit-words')\n    @vocabulary_progress_schema.submit_words_schema\n    def submit_words(self, request):\n        \"\"\"",
        "detail": "backend.apps.progress.views.vocabulary_progress_view",
        "documentation": {}
    },
    {
        "label": "ProgressConfig",
        "kind": 6,
        "importPath": "backend.apps.progress.apps",
        "description": "backend.apps.progress.apps",
        "peekOfCode": "class ProgressConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.progress'",
        "detail": "backend.apps.progress.apps",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.apps.progress.urls",
        "description": "backend.apps.progress.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'courses', CourseProgressViewSet, basename='course')\nrouter.register(r'lessons', LessonProgressViewSet, basename='lesson')\nrouter.register(r'vocabularies', VocabularyProgressViewSet, basename='vocabulary')\nurlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend.apps.progress.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.apps.progress.urls",
        "description": "backend.apps.progress.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "backend.apps.progress.urls",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\nload_dotenv()\nSECRET_KEY = os.getenv(\"SECRET_KEY\")\nFE_URL = os.getenv(\"FE_URL\")\n# OAuth\nGOOGLE_OAUTH_CLIENT_ID = os.getenv(\"GOOGLE_OAUTH_CLIENT_ID\")\nGOOGLE_OAUTH_CLIENT_SECRET = os.getenv(\"GOOGLE_OAUTH_CLIENT_SECRET\")\nGOOGLE_OAUTH_CALLBACK_URL = os.getenv(\"GOOGLE_OAUTH_CALLBACK_URL\")\nFACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "SECRET_KEY = os.getenv(\"SECRET_KEY\")\nFE_URL = os.getenv(\"FE_URL\")\n# OAuth\nGOOGLE_OAUTH_CLIENT_ID = os.getenv(\"GOOGLE_OAUTH_CLIENT_ID\")\nGOOGLE_OAUTH_CLIENT_SECRET = os.getenv(\"GOOGLE_OAUTH_CLIENT_SECRET\")\nGOOGLE_OAUTH_CALLBACK_URL = os.getenv(\"GOOGLE_OAUTH_CALLBACK_URL\")\nFACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "FE_URL",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "FE_URL = os.getenv(\"FE_URL\")\n# OAuth\nGOOGLE_OAUTH_CLIENT_ID = os.getenv(\"GOOGLE_OAUTH_CLIENT_ID\")\nGOOGLE_OAUTH_CLIENT_SECRET = os.getenv(\"GOOGLE_OAUTH_CLIENT_SECRET\")\nGOOGLE_OAUTH_CALLBACK_URL = os.getenv(\"GOOGLE_OAUTH_CALLBACK_URL\")\nFACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "GOOGLE_OAUTH_CLIENT_ID",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "GOOGLE_OAUTH_CLIENT_ID = os.getenv(\"GOOGLE_OAUTH_CLIENT_ID\")\nGOOGLE_OAUTH_CLIENT_SECRET = os.getenv(\"GOOGLE_OAUTH_CLIENT_SECRET\")\nGOOGLE_OAUTH_CALLBACK_URL = os.getenv(\"GOOGLE_OAUTH_CALLBACK_URL\")\nFACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "GOOGLE_OAUTH_CLIENT_SECRET",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "GOOGLE_OAUTH_CLIENT_SECRET = os.getenv(\"GOOGLE_OAUTH_CLIENT_SECRET\")\nGOOGLE_OAUTH_CALLBACK_URL = os.getenv(\"GOOGLE_OAUTH_CALLBACK_URL\")\nFACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "GOOGLE_OAUTH_CALLBACK_URL",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "GOOGLE_OAUTH_CALLBACK_URL = os.getenv(\"GOOGLE_OAUTH_CALLBACK_URL\")\nFACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "FACEBOOK_OAUTH_CLIENT_ID",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "FACEBOOK_OAUTH_CLIENT_ID = os.getenv(\"FACEBOOK_OAUTH_CLIENT_ID\")\nFACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "FACEBOOK_OAUTH_CLIENT_SECRET",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "FACEBOOK_OAUTH_CLIENT_SECRET = os.getenv(\"FACEBOOK_OAUTH_CLIENT_SECRET\")\nAUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "AUTH_USER_MODEL = 'accounts.CustomUser'\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "EMAIL_HOST = os.getenv(\"EMAIL_HOST\")\nEMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),\n}",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "EMAIL_PORT = int(os.getenv(\"EMAIL_PORT\", 587))\nEMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),\n}\ncloudinary.config(",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "EMAIL_USE_TLS = os.getenv(\"EMAIL_USE_TLS\") == \"True\"\nEMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),\n}\ncloudinary.config(\n    cloud_name=CLOUDINARY_STORAGE['CLOUD_NAME'],",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "EMAIL_HOST_USER = os.getenv(\"EMAIL_HOST_USER\")\nEMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),\n}\ncloudinary.config(\n    cloud_name=CLOUDINARY_STORAGE['CLOUD_NAME'],\n    api_key=CLOUDINARY_STORAGE['API_KEY'],",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.getenv(\"EMAIL_HOST_PASSWORD\")\nCLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),\n}\ncloudinary.config(\n    cloud_name=CLOUDINARY_STORAGE['CLOUD_NAME'],\n    api_key=CLOUDINARY_STORAGE['API_KEY'],\n    api_secret=CLOUDINARY_STORAGE['API_SECRET'],",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "CLOUDINARY_STORAGE",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "CLOUDINARY_STORAGE = {\n    'CLOUD_NAME': os.getenv(\"CLOUD_NAME\"),\n    'API_KEY': os.getenv(\"CLOUDINARY_API_KEY\"),\n    'API_SECRET': os.getenv(\"CLOUDINARY_API_SECRET\"),\n}\ncloudinary.config(\n    cloud_name=CLOUDINARY_STORAGE['CLOUD_NAME'],\n    api_key=CLOUDINARY_STORAGE['API_KEY'],\n    api_secret=CLOUDINARY_STORAGE['API_SECRET'],\n    secure=True",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework_simplejwt',\n    'rest_framework_simplejwt.token_blacklist',",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ],\n    'EXCEPTION_HANDLER': 'backend/core/exceptions.http_exception_handler',\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 10,\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nMIDDLEWARE = [",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "MIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    \"allauth.account.middleware.AccountMiddleware\",",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "ROOT_URLCONF = 'config.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / \"templates\"],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "WSGI_APPLICATION = 'config.wsgi.application'\nAUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},\n]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},\n]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = 'static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = 'static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nAUTHENTICATION_BACKENDS = (",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nSTATIC_URL = 'static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nAUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "USE_TZ = True\nSTATIC_URL = 'static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nAUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend',",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "STATIC_URL = 'static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nAUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend',\n)",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nAUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend',\n)\nSITE_ID = 1",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),\n}\nAUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend',\n)\nSITE_ID = 1\nACCOUNT_AUTHENTICATION_METHOD = \"email\"",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "AUTHENTICATION_BACKENDS = (\n    'django.contrib.auth.backends.ModelBackend',\n    'allauth.account.auth_backends.AuthenticationBackend',\n)\nSITE_ID = 1\nACCOUNT_AUTHENTICATION_METHOD = \"email\"\nACCOUNT_USERNAME_REQUIRED = False\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_EMAIL_VERIFICATION = \"none\"\nACCOUNT_UNIQUE_EMAIL = True",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "SITE_ID = 1\nACCOUNT_AUTHENTICATION_METHOD = \"email\"\nACCOUNT_USERNAME_REQUIRED = False\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_EMAIL_VERIFICATION = \"none\"\nACCOUNT_UNIQUE_EMAIL = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_AUTHENTICATION_METHOD",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "ACCOUNT_AUTHENTICATION_METHOD = \"email\"\nACCOUNT_USERNAME_REQUIRED = False\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_EMAIL_VERIFICATION = \"none\"\nACCOUNT_UNIQUE_EMAIL = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_USERNAME_REQUIRED",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "ACCOUNT_USERNAME_REQUIRED = False\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_EMAIL_VERIFICATION = \"none\"\nACCOUNT_UNIQUE_EMAIL = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_EMAIL_REQUIRED",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "ACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_EMAIL_VERIFICATION = \"none\"\nACCOUNT_UNIQUE_EMAIL = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),\n        \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_EMAIL_VERIFICATION",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "ACCOUNT_EMAIL_VERIFICATION = \"none\"\nACCOUNT_UNIQUE_EMAIL = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),\n        \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},\n    }",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_UNIQUE_EMAIL",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "ACCOUNT_UNIQUE_EMAIL = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),\n        \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},\n    }\n}",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "SOCIALACCOUNT_EMAIL_AUTHENTICATION",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "SOCIALACCOUNT_EMAIL_AUTHENTICATION = True\nSOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),\n        \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},\n    }\n}\nSOCIALACCOUNT_PROVIDERS = {",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "SOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "SOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True\nCACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),\n        \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},\n    }\n}\nSOCIALACCOUNT_PROVIDERS = {\n    \"google\": {",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "CACHES",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "CACHES = {\n    \"default\": {\n        \"BACKEND\": \"django_redis.cache.RedisCache\",\n        \"LOCATION\": os.getenv(\"REDIS_URL\"),\n        \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},\n    }\n}\nSOCIALACCOUNT_PROVIDERS = {\n    \"google\": {\n        \"APP\": {",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "SOCIALACCOUNT_PROVIDERS",
        "kind": 5,
        "importPath": "backend.config.settings.base",
        "description": "backend.config.settings.base",
        "peekOfCode": "SOCIALACCOUNT_PROVIDERS = {\n    \"google\": {\n        \"APP\": {\n            \"client_id\": GOOGLE_OAUTH_CLIENT_ID,\n            \"secret\": GOOGLE_OAUTH_CLIENT_SECRET,\n            \"key\": \"\",\n        },\n        \"SCOPE\": [\"profile\", \"email\"],\n        \"AUTH_PARAMS\": {\"access_type\": \"online\"},\n    },",
        "detail": "backend.config.settings.base",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.config.settings.dev",
        "description": "backend.config.settings.dev",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"localhost\", \"127.0.0.1\", os.getenv(\"ALLOWED_HOSTS\")]\nCORS_ALLOWED_ORIGINS = [\n    os.getenv(\"CORS_ALLOWED_ORIGIN\"),\n    \"http://localhost:3000\",\n]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),",
        "detail": "backend.config.settings.dev",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.config.settings.dev",
        "description": "backend.config.settings.dev",
        "peekOfCode": "ALLOWED_HOSTS = [\"localhost\", \"127.0.0.1\", os.getenv(\"ALLOWED_HOSTS\")]\nCORS_ALLOWED_ORIGINS = [\n    os.getenv(\"CORS_ALLOWED_ORIGIN\"),\n    \"http://localhost:3000\",\n]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),",
        "detail": "backend.config.settings.dev",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "backend.config.settings.dev",
        "description": "backend.config.settings.dev",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    os.getenv(\"CORS_ALLOWED_ORIGIN\"),\n    \"http://localhost:3000\",\n]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),\n        'PASSWORD': os.getenv(\"DB_PASSWORD\"),",
        "detail": "backend.config.settings.dev",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.config.settings.dev",
        "description": "backend.config.settings.dev",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),\n        'PASSWORD': os.getenv(\"DB_PASSWORD\"),\n        'HOST': os.getenv(\"DB_HOST\"),\n        'PORT': os.getenv(\"DB_PORT\"),\n        'OPTIONS': {\n            'sslmode': os.getenv(\"SSLMODE\", \"prefer\"),",
        "detail": "backend.config.settings.dev",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.config.settings.prod",
        "description": "backend.config.settings.prod",
        "peekOfCode": "DEBUG = False\nALLOWED_HOSTS = [os.getenv(\"ALLOWED_HOSTS\")]\nCORS_ALLOWED_ORIGINS = [os.getenv(\"CORS_ALLOWED_ORIGIN\")]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),\n        'PASSWORD': os.getenv(\"DB_PASSWORD\"),\n        'HOST': os.getenv(\"DB_HOST\"),",
        "detail": "backend.config.settings.prod",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.config.settings.prod",
        "description": "backend.config.settings.prod",
        "peekOfCode": "ALLOWED_HOSTS = [os.getenv(\"ALLOWED_HOSTS\")]\nCORS_ALLOWED_ORIGINS = [os.getenv(\"CORS_ALLOWED_ORIGIN\")]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),\n        'PASSWORD': os.getenv(\"DB_PASSWORD\"),\n        'HOST': os.getenv(\"DB_HOST\"),\n        'PORT': os.getenv(\"DB_PORT\"),",
        "detail": "backend.config.settings.prod",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "backend.config.settings.prod",
        "description": "backend.config.settings.prod",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [os.getenv(\"CORS_ALLOWED_ORIGIN\")]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),\n        'PASSWORD': os.getenv(\"DB_PASSWORD\"),\n        'HOST': os.getenv(\"DB_HOST\"),\n        'PORT': os.getenv(\"DB_PORT\"),\n        'OPTIONS': {",
        "detail": "backend.config.settings.prod",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.config.settings.prod",
        "description": "backend.config.settings.prod",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv(\"DB_NAME\"),\n        'USER': os.getenv(\"DB_USER\"),\n        'PASSWORD': os.getenv(\"DB_PASSWORD\"),\n        'HOST': os.getenv(\"DB_HOST\"),\n        'PORT': os.getenv(\"DB_PORT\"),\n        'OPTIONS': {\n            'sslmode': os.getenv(\"SSLMODE\", \"require\"),",
        "detail": "backend.config.settings.prod",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.config.settings.test",
        "description": "backend.config.settings.test",
        "peekOfCode": "DEBUG = False\nALLOWED_HOSTS = [\"*\"]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / \"test_db.sqlite3\",\n    }\n}\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.MD5PasswordHasher',",
        "detail": "backend.config.settings.test",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.config.settings.test",
        "description": "backend.config.settings.test",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / \"test_db.sqlite3\",\n    }\n}\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.MD5PasswordHasher',\n]",
        "detail": "backend.config.settings.test",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.config.settings.test",
        "description": "backend.config.settings.test",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / \"test_db.sqlite3\",\n    }\n}\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.MD5PasswordHasher',\n]",
        "detail": "backend.config.settings.test",
        "documentation": {}
    },
    {
        "label": "PASSWORD_HASHERS",
        "kind": 5,
        "importPath": "backend.config.settings.test",
        "description": "backend.config.settings.test",
        "peekOfCode": "PASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.MD5PasswordHasher',\n]",
        "detail": "backend.config.settings.test",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.config.asgi",
        "description": "backend.config.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.config.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.config.urls",
        "description": "backend.config.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/schema/', SpectacularAPIView.as_view(), name='schema'),\n    path('api/docs/', SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),\n    path('api/redoc/', SpectacularRedocView.as_view(url_name='schema'), name='redoc'),\n    path('api/progress/', include('apps.progress.urls')),\n    path('api/learning/', include('apps.learning.urls')),\n    path('api/gamification/', include('apps.gamification.urls')),\n    path('api/accounts/', include('apps.accounts.urls')),\n]",
        "detail": "backend.config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.config.wsgi",
        "description": "backend.config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.config.wsgi",
        "documentation": {}
    },
    {
        "label": "CustomException",
        "kind": 6,
        "importPath": "backend.core.exceptions",
        "description": "backend.core.exceptions",
        "peekOfCode": "class CustomException(Exception):\n    code: int\n    message: str\n    def __init__(self, http_code: int, code: int, message: str):\n        self.http_code = http_code if http_code else 500\n        self.code = code if code else http_code\n        self.message = message\ndef build_error_response(code, message, status_code, details=None):\n    \"\"\"\n    Hàm chuẩn để đóng gói lỗi trả về JSON thống nhất",
        "detail": "backend.core.exceptions",
        "documentation": {}
    },
    {
        "label": "build_error_response",
        "kind": 2,
        "importPath": "backend.core.exceptions",
        "description": "backend.core.exceptions",
        "peekOfCode": "def build_error_response(code, message, status_code, details=None):\n    \"\"\"\n    Hàm chuẩn để đóng gói lỗi trả về JSON thống nhất\n    \"\"\"\n    response_data = {\n        \"code\": code,\n        \"message\": message\n    }\n    if details is not None:\n        response_data[\"details\"] = details",
        "detail": "backend.core.exceptions",
        "documentation": {}
    },
    {
        "label": "http_exception_handler",
        "kind": 2,
        "importPath": "backend.core.exceptions",
        "description": "backend.core.exceptions",
        "peekOfCode": "def http_exception_handler(exc, context):\n    \"\"\"\n    Custom exception handler trả về JSON lỗi đồng nhất\n    \"\"\"\n    if isinstance(exc, CustomException):\n        return build_error_response(exc.code, exc.message, exc.http_code)\n    if isinstance(exc, ValidationError):\n        return build_error_response(\n            status.HTTP_400_BAD_REQUEST,\n            \"Validation failed\",",
        "detail": "backend.core.exceptions",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "backend.core.exceptions",
        "description": "backend.core.exceptions",
        "peekOfCode": "logger = logging.getLogger(__name__)\nclass CustomException(Exception):\n    code: int\n    message: str\n    def __init__(self, http_code: int, code: int, message: str):\n        self.http_code = http_code if http_code else 500\n        self.code = code if code else http_code\n        self.message = message\ndef build_error_response(code, message, status_code, details=None):\n    \"\"\"",
        "detail": "backend.core.exceptions",
        "documentation": {}
    },
    {
        "label": "workers",
        "kind": 5,
        "importPath": "backend.gunicorn_conf",
        "description": "backend.gunicorn_conf",
        "peekOfCode": "workers = multiprocessing.cpu_count() * 2 + 1\nbind = \"0.0.0.0:8000\"\ntimeout = 30\nloglevel = \"info\"\naccesslog = \"-\"       # ghi log truy cập ra stdout\nerrorlog = \"-\"        # ghi log lỗi ra stdout",
        "detail": "backend.gunicorn_conf",
        "documentation": {}
    },
    {
        "label": "bind",
        "kind": 5,
        "importPath": "backend.gunicorn_conf",
        "description": "backend.gunicorn_conf",
        "peekOfCode": "bind = \"0.0.0.0:8000\"\ntimeout = 30\nloglevel = \"info\"\naccesslog = \"-\"       # ghi log truy cập ra stdout\nerrorlog = \"-\"        # ghi log lỗi ra stdout",
        "detail": "backend.gunicorn_conf",
        "documentation": {}
    },
    {
        "label": "timeout",
        "kind": 5,
        "importPath": "backend.gunicorn_conf",
        "description": "backend.gunicorn_conf",
        "peekOfCode": "timeout = 30\nloglevel = \"info\"\naccesslog = \"-\"       # ghi log truy cập ra stdout\nerrorlog = \"-\"        # ghi log lỗi ra stdout",
        "detail": "backend.gunicorn_conf",
        "documentation": {}
    },
    {
        "label": "loglevel",
        "kind": 5,
        "importPath": "backend.gunicorn_conf",
        "description": "backend.gunicorn_conf",
        "peekOfCode": "loglevel = \"info\"\naccesslog = \"-\"       # ghi log truy cập ra stdout\nerrorlog = \"-\"        # ghi log lỗi ra stdout",
        "detail": "backend.gunicorn_conf",
        "documentation": {}
    },
    {
        "label": "accesslog",
        "kind": 5,
        "importPath": "backend.gunicorn_conf",
        "description": "backend.gunicorn_conf",
        "peekOfCode": "accesslog = \"-\"       # ghi log truy cập ra stdout\nerrorlog = \"-\"        # ghi log lỗi ra stdout",
        "detail": "backend.gunicorn_conf",
        "documentation": {}
    },
    {
        "label": "errorlog",
        "kind": 5,
        "importPath": "backend.gunicorn_conf",
        "description": "backend.gunicorn_conf",
        "peekOfCode": "errorlog = \"-\"        # ghi log lỗi ra stdout",
        "detail": "backend.gunicorn_conf",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    }
]